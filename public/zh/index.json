[{"authors":null,"categories":null,"content":"本人目前是华中农业大学-动物科学动物医学院的一名在读博士生，研究方向包括基因组选择及机器学习在动物育种中的应用。本人熟练掌握多种编程语言，包括 Python, R 及 Rcpp(C++)等。\n","date":1554595200,"expirydate":-62135596800,"kind":"term","lang":"zh","lastmod":1554595200,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"/zh/author/%E6%A2%85%E5%85%A8%E9%A1%BA/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/zh/author/%E6%A2%85%E5%85%A8%E9%A1%BA/","section":"authors","summary":"本人目前是华中农业大学-动物科学动物医学院的一名在读博士生，研究方向包括基因组选择及机器学习在动物育种中的应用。本人熟练掌握多种编程语言，包括 Python, R 及 Rcpp(C++)等。","tags":null,"title":"梅全顺","type":"authors"},{"authors":null,"categories":null,"content":"   目录  What you will learn Program overview Courses in this program Meet your instructor FAQs    What you will learn  Fundamental Python programming skills Statistical concepts and how to apply them in practice Gain experience with the Scikit, including data visualization with Plotly and data wrangling with Pandas  Program overview The demand for skilled data science practitioners is rapidly growing. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi.\nCourses in this program  Python basics Build a foundation in Python.   Visualization Learn how to visualize data with Plotly.   Statistics Introduction to statistics for data science.   Meet your instructor 梅全顺 FAQs Are there prerequisites? There are no prerequisites for the first course.\n How often do the courses run? Continuously, at your own pace.\n  Begin the course   ","date":1611446400,"expirydate":-62135596800,"kind":"section","lang":"zh","lastmod":1611446400,"objectID":"59c3ce8e202293146a8a934d37a4070b","permalink":"/zh/courses/example/","publishdate":"2021-01-24T00:00:00Z","relpermalink":"/zh/courses/example/","section":"courses","summary":"An example of using Wowchemy's Book layout for publishing online courses.","tags":null,"title":"📊 Learn Data Science","type":"book"},{"authors":null,"categories":null,"content":"Build a foundation in Python.\n  1-2 hours per week, for 8 weeks\nLearn   Quiz What is the difference between lists and tuples? Lists\n Lists are mutable - they can be changed Slower than tuples Syntax: a_list = [1, 2.0, 'Hello world']  Tuples\n Tuples are immutable - they can\u0026rsquo;t be changed Tuples are faster than lists Syntax: a_tuple = (1, 2.0, 'Hello world')   Is Python case-sensitive? Yes\n","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"zh","lastmod":1609459200,"objectID":"17a31b92253d299002593b7491eedeea","permalink":"/zh/courses/example/python/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/zh/courses/example/python/","section":"courses","summary":"Build a foundation in Python.\n","tags":null,"title":"Python basics","type":"book"},{"authors":null,"categories":null,"content":"Learn how to visualize data with Plotly.\n  1-2 hours per week, for 8 weeks\nLearn   Quiz When is a heatmap useful? Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n Write Plotly code to render a bar chart import plotly.express as px data_canada = px.data.gapminder().query(\u0026quot;country == 'Canada'\u0026quot;) fig = px.bar(data_canada, x='year', y='pop') fig.show()  ","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"zh","lastmod":1609459200,"objectID":"1b341b3479c8c6b1f807553b77e21b7c","permalink":"/zh/courses/example/visualization/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/zh/courses/example/visualization/","section":"courses","summary":"Learn how to visualize data with Plotly.\n","tags":null,"title":"Visualization","type":"book"},{"authors":null,"categories":null,"content":"Introduction to statistics for data science.\n  1-2 hours per week, for 8 weeks\nLearn The general form of the normal probability density function is:\n$$ f(x) = \\frac{1}{\\sigma \\sqrt{2\\pi} } e^{-\\frac{1}{2}\\left(\\frac{x-\\mu}{\\sigma}\\right)^2} $$\n The parameter $\\mu$ is the mean or expectation of the distribution. $\\sigma$ is its standard deviation. The variance of the distribution is $\\sigma^{2}$.   Quiz What is the parameter $\\mu$? The parameter $\\mu$ is the mean or expectation of the distribution.\n","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"zh","lastmod":1609459200,"objectID":"6f4078728d71b1b791d39f218bf2bdb1","permalink":"/zh/courses/example/stats/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/zh/courses/example/stats/","section":"courses","summary":"Introduction to statistics for data science.\n","tags":null,"title":"Statistics","type":"book"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Wowchemy\u0026rsquo;s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"zh","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"/zh/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/zh/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":[],"categories":["shiny","online"],"content":"\r\r🙀大家好，从本节开始，我将给大家分享 blupADC-online (在线版)的使用说明。可能有同学会问：既然已经有了blupADC 这个package了，那么为什么还要开发blupADC-online 呢？\n其实，blupADC-online可以看成是blupADC package的简化版。凡是blupADC-online 能实现的功能， blupADCpackage均能实现。但是，考虑到部分用户可能对R不太了解，因此我们想到了开发blupADC-online 。通过blupADC-online ，用户即使没有编程基础也能很快的完成相应的分析💯。\n本节，我们给大家带来的是如何通过blupADC-online 完成DMU相关的分析。\n✋登录\r在浏览器栏直接输入网址: http://47.95.251.15:443/sample-apps/blupADC/ 即可登录到blupADC-online主界面，如下所示：\n首先我们在菜单栏点击DMU图标，即可发现有三个子菜单，从上到下依次是：\nDIR、SOL 和 Run DMU。本节的重点就是介绍这三个子菜单界面。\n如果大家事先已经了解过run_DMU 函数的话，那么本节内容可能对大家来说就比较熟悉了。如果没有事先了解也没关系，因为相关的操作还是非常简单的。\n\r✋DIR界面\r点击DIR菜单，我们就能进入 DIR界面。DIR界面的主要功能是生成 DMU格式的参数文件。下面我们来对界面内的各个参数进行逐一讲解：\nBasic information\r\rNumber of trait: 要分析的性状的数目\rNumber of integer variable: 表型数据中，整型变量的个数\rName of genetic effect: 遗传效应的名称(一般为动植物个体Id)\rUpload colnames of phenotype data: 上传表型数据的列名文件。文件格式如下所示：\r\rNote: 列名文件的格式为：n行1列。每行代表的是表型数据的列名。\n\rFile path and name\r\rRelationship file path: 亲缘关系文件的路径\n\rRelationship file name: 亲缘关系文件的名称。\n针对不同的Analysis model，我们需要提供不同的亲缘关系文件。具体对应关系为：\n\rPBLUP_A: 亲缘关系文件为系谱文件\rGBLUP_A: 亲缘关系文件为基因组亲缘关系矩阵的逆矩阵文件\rGBLUP_AD: 亲缘关系文件为基因组亲缘关系矩阵的逆矩阵文件\rSSBLUP_A: 亲缘关系文件为系谱文件及基因组亲缘关系矩阵文件\r\rPhenotype file path: 表型文件的路径\n\rPhenotype file name: 表型文件的名称\n\r\r\rDMU parameter\r\rDMU module: DMU进行遗传评估时所选用的模块，默认为 dmuai 。\n\rDMU algorithm code: 方差组分估计所用的算法，默认为 1。\n\rAnalysis model: 进行遗传评估所选用的模型。可选模型包括：\n\rPBLUP_A: 系谱加性效应模型\rGBLUP_A: 基因组加性效应模型\rGBLUP_AD:基因组加性-显性效应模型\rSSBLUP_A:一步法加性效应模型\r\r\r当用户上传表型数据的列名文件后，当前界面内便会新增几个窗口，如下：\n用户可以通过设置Number of trait来调整小窗口的个数。\ne.g. 当设置Number of trait为3时，就会生成3个小窗口，如下所示：\n用户可以在窗口内输入想要分析的性状名称及对应的固定效应、随机效应和协变量效应的名称。为了方便用户输入，选择性状和效应名称时可通过下拉菜单选取，如下：\n下面以一个具体的例子进行说明：\ne.g. 想要分析的性状为：ADG ;\n固定效应包括： Sex 和 Breed;\n随机效应包括Id ;\n协变量效应包括：Age_at_off_test。\n那么我们只需要在窗口内输入对应的信息即可，如下：\n输入完相应的效应后，在界面的正下方会实时显示所生成的 dir 参数文件内容，如下所示：\n用户可以通过下方的 Download DIR按键即可将生成的 dir 文件下载到本地。\n\r\r✋SOL界面\r点击左侧的SOL子菜单，我们就能进入SOL界面。\nSOL界面的主要功能是整理DMU输出的结果，快速得到EBV、残差、校正表型和DEBV等结果。下面我们来对界面内的各个参数进行逐一讲解：\n\rNumber of trait: 要分析的性状的数目\rGenetic number in SOL file: SOL文件中，遗传效应所对应的数字代码\rName of genetic effect: 遗传效应的名称(一般为动植物个体Id)\r\rPhenotype\r\rUpload colnames of phenotype data: 上传表型数据的列名文件。\rUpload phenotype data: 上传表型数据文件\r\r\rDEBV(可选:当需要计算DEBV时，才需要上传相应的文件。)\r\rUpload pedigree file: 上传系谱数据文件\rUpload subset id: 上传需要计算DEBV的个体号数据文件\r\r\rDMU result\r\rUpload SOL file: 上传DMU输出的SOL文件\rUpload RESIDUAL file: 上传DMU输出的RESIDUAL文件\rUpload PAROUT file: 上传DMU输出的PAROUT 文件\r\r和之前的类似，当我们上传了表型数据的列名文件后，当前界面内同样会新增几个窗口，如下：\n当我们输入了对应的性状名称后，界面正下方就会以表格的形式 实时显示 个体对应的EBV, 残差，校正表型和 DEBV，如下：\n用户可以在表格内轻松的完成查询、排序等操作。\n用户可以通过下方的 Download corrected phe按键即可将校正表型文件下载到本地。\n\r\r✋Run dmu界面\r点击左侧的Run DMU子菜单，我们就能进入Run DMU 界面。\nRun DMU界面的主要功能是快速帮我们完成DMU相关的分析。其实，Run DMU界面的功能可以看成是 DIR界面和 SOL界面功能的集合体。不过，二者最重要的区别是，Run DMU界面能自动帮我们调用DMU软件并完成相应的分析。\n总结起来就是：通过Run DMU 界面，我们只需要提供相关的性状名称和表型、系谱等数据文件后，就能得到最终的个体育种值、残差、校正表型和DEBV等结果。\nRun DMU 界面内的各个参数在 DIR界面和SOL界面内都有详细讲解，这里就不再赘述了。\n完成了前期的数据准备工作后，用户只需要点击 Run DMU 按键，就能开始DMU的分析了。\n由于不同数据量的分析时间是不同的，因此需要耐心的等待。通常情况下，几分钟就能得到结果。结果如下所示：\n用户通过点击下方的 Download EBV按键即可将生成的文件保存到本地。\n\r","date":1619049600,"expirydate":-62135596800,"kind":"page","lang":"zh","lastmod":1619104301,"objectID":"1c2e38a35338970012171a927ee72425","permalink":"/zh/post/feature-9-shiny_blupadc/online_dmu/","publishdate":"2021-04-22T00:00:00Z","relpermalink":"/zh/post/feature-9-shiny_blupadc/online_dmu/","section":"post","summary":"blupADC-online 运行DMU","tags":[],"title":"blupADC 在线版- 使用说明1","type":"post"},{"authors":[],"categories":["BLUPf90"],"content":"目录  简述 示例  单性状模型-系谱 单性状模型-GBLUP 单性状模型-Single-step(一步法) 多性状模型-系谱   参数详解  💫特有参数      简述 👻在前面的章节，我们已经讲述了如何在R中调用DMU软件并完成相应的分析。本章，我们将讲述如何通过BLUP_ADC中的run_BLUPF90函数，在R中调用BLUPF90软件并完成数据分析。为了方便用户的使用，我们已经尽可能地将 run_BLUPF90函数中的参数 和 run_DMU函数中的参数进行了统一。\n👉 Note: 为了方便用户使用， blupADC 已经封装了BLUPF90中的几个基本模块(renumf90, remlf90, airemlf90, 和 blupf90), 更多的模块可以从BLUPF90官网进行下载(BLUPF90下载网站).\n如果您想将BLUPF90用作商业用途，请务必联系 BLUPF90的作者！！！\n接下来，我们还是用几个简单的例子看看该函数的用法:\n示例 单性状模型-系谱 library(blupADC)\rdata_path=system.file(\u0026quot;extdata\u0026quot;, package = \u0026quot;blupADC\u0026quot;) # 示例文件的路径\rrun_BLUPF90(\rphe_col_names=c(\u0026quot;Id\u0026quot;,\u0026quot;Mean\u0026quot;,\u0026quot;Sex\u0026quot;,\u0026quot;Herd_Year_Season\u0026quot;,\u0026quot;Litter\u0026quot;,\u0026quot;Trait1\u0026quot;,\u0026quot;Trait2\u0026quot;,\u0026quot;Age\u0026quot;), # 表型数据的列名(ps.表型文件无列名)\rtarget_trait_name=list(c(\u0026quot;Trait1\u0026quot;)), #性状名称\rfixed_effect_name=list(c(\u0026quot;Sex\u0026quot;,\u0026quot;Herd_Year_Season\u0026quot;)), #固定效应名称\rrandom_effect_name=list(c(\u0026quot;Id\u0026quot;,\u0026quot;Litter\u0026quot;)), #随机效应名称\rcovariate_effect_name=NULL, #协变量效应名称\rgenetic_effect_name=\u0026quot;Id\u0026quot;,\t#遗传效应名称 phe_path=data_path, #表型文件路径\rphe_name=\u0026quot;phenotype.txt\u0026quot;, #表型文件名\ranalysis_model=\u0026quot;PBLUP_A\u0026quot;, #遗传评估模型\rrelationship_path=data_path, #亲缘关系文件路径\rrelationship_name=\u0026quot;pedigree.txt\u0026quot;, #亲缘关系文件名\routput_result_path=getwd() #结果输出路径\r)\r 单性状模型-GBLUP library(blupADC)\rdata_path=system.file(\u0026quot;extdata\u0026quot;, package = \u0026quot;blupADC\u0026quot;) # 示例文件的路径\rrun_BLUPF90(\rphe_col_names=c(\u0026quot;Id\u0026quot;,\u0026quot;Mean\u0026quot;,\u0026quot;Sex\u0026quot;,\u0026quot;Herd_Year_Season\u0026quot;,\u0026quot;Litter\u0026quot;,\u0026quot;Trait1\u0026quot;,\u0026quot;Trait2\u0026quot;,\u0026quot;Age\u0026quot;), # 表型数据的列名(ps.表型文件无列名)\rtarget_trait_name=list(c(\u0026quot;Trait1\u0026quot;)), #性状名称\rfixed_effect_name=list(c(\u0026quot;Sex\u0026quot;,\u0026quot;Herd_Year_Season\u0026quot;)), #固定效应名称\rrandom_effect_name=list(c(\u0026quot;Id\u0026quot;,\u0026quot;Litter\u0026quot;)), #随机效应名称\rcovariate_effect_name=NULL, #协变量效应名称\rgenetic_effect_name=\u0026quot;Id\u0026quot;,\t#遗传效应名称 phe_path=data_path, #表型文件路径\rphe_name=\u0026quot;phenotype.txt\u0026quot;, #表型文件名\ranalysis_model=\u0026quot;GBLUP_A\u0026quot;, #遗传评估模型\rrelationship_path=data_path, #亲缘关系文件路径\rrelationship_name=\u0026quot;blupf90_genumeric\u0026quot;, #亲缘关系文件名\routput_result_path=getwd() #结果输出路径\r)\r 单性状模型-Single-step(一步法) library(blupADC)\rdata_path=system.file(\u0026quot;extdata\u0026quot;, package = \u0026quot;blupADC\u0026quot;) # 示例文件的路径\rrun_BLUPF90(\rphe_col_names=c(\u0026quot;Id\u0026quot;,\u0026quot;Mean\u0026quot;,\u0026quot;Sex\u0026quot;,\u0026quot;Herd_Year_Season\u0026quot;,\u0026quot;Litter\u0026quot;,\u0026quot;Trait1\u0026quot;,\u0026quot;Trait2\u0026quot;,\u0026quot;Age\u0026quot;), # 表型数据的列名(ps.表型文件无列名)\rtarget_trait_name=list(c(\u0026quot;Trait1\u0026quot;)), #性状名称\rfixed_effect_name=list(c(\u0026quot;Sex\u0026quot;,\u0026quot;Herd_Year_Season\u0026quot;)), #固定效应名称\rrandom_effect_name=list(c(\u0026quot;Id\u0026quot;,\u0026quot;Litter\u0026quot;)), #随机效应名称\rcovariate_effect_name=NULL, #协变量效应名称\rgenetic_effect_name=\u0026quot;Id\u0026quot;,\t#遗传效应名称 phe_path=data_path, #表型文件路径\rphe_name=\u0026quot;phenotype.txt\u0026quot;, #表型文件名\ranalysis_model=\u0026quot;SSBLUP_A\u0026quot;, #遗传评估模型\rrelationship_path=data_path, #亲缘关系文件路径\rrelationship_name=c(\u0026quot;pedigree.txt\u0026quot;,\u0026quot;blupf90_genumeric\u0026quot;), #亲缘关系文件名\routput_result_path=getwd() #结果输出路径\r)  同样的，与DMU使用类似，我们仅需改变 analysis_model 及 relationship_name 这两个参数即可完成 系谱、GBLUP及SSBLUP的分析(PS: blupf90_genumeric 文件 均可通过 genotype_data_format_conversion函数得到 了解更多)。\n多性状模型-系谱 上面我们介绍的都是单性状模型(只包括了一个目标性状)。与上一节的介绍的run_DMU函数类似，如果我们想完成双性状模型的计算，只需要在上面的脚本的基础上稍作修改就能实现目的，具体代码如下：\nlibrary(blupADC)\rdata_path=system.file(\u0026quot;extdata\u0026quot;, package = \u0026quot;blupADC\u0026quot;) # 示例文件的路径\rrun_BLUPF90(\rphe_col_names=c(\u0026quot;Id\u0026quot;,\u0026quot;Mean\u0026quot;,\u0026quot;Sex\u0026quot;,\u0026quot;Herd_Year_Season\u0026quot;,\u0026quot;Litter\u0026quot;,\u0026quot;Trait1\u0026quot;,\u0026quot;Trait2\u0026quot;,\u0026quot;Age\u0026quot;), # 表型数据的列名(ps.表型文件无列名)\rtarget_trait_name=list(c(\u0026quot;Trait1\u0026quot;),c(\u0026quot;Trait2\u0026quot;)), #性状名称\rfixed_effect_name=list(c(\u0026quot;Sex\u0026quot;,\u0026quot;Herd_Year_Season\u0026quot;),c(\u0026quot;Herd_Year_Season\u0026quot;)), #固定效应名称\rrandom_effect_name=list(c(\u0026quot;Id\u0026quot;,\u0026quot;Litter\u0026quot;),c(\u0026quot;Id\u0026quot;)), #随机效应名称\rcovariate_effect_name=list(NULL,\u0026quot;Age\u0026quot;), #协变量效应名称\rgenetic_effect_name=\u0026quot;Id\u0026quot;,\t#遗传效应名称 phe_path=data_path, #表型文件路径\rphe_name=\u0026quot;phenotype.txt\u0026quot;, #表型文件名\ranalysis_model=\u0026quot;PBLUP_A\u0026quot;, #遗传评估模型\rrelationship_path=data_path, #亲缘关系文件路径\rrelationship_name=\u0026quot;pedigree.txt\u0026quot;, #亲缘关系文件名\routput_result_path=getwd() #结果输出路径\r)  参数详解 接下来，我们将对run_BLUPF90 中特有的参数进行讲解，剩余的参数大家可移步DMU软件的交互使用进行查看，相同参数的用法和含义均是一模一样的。\n💫特有参数   参数1：blupf90_algorithm\nBLPUF90进行方差组分估计时选用的算法，character类型。可选算法包括：\n \u0026quot;AI_REML\u0026quot; \u0026quot;EM_REML\u0026quot; \u0026quot;BLUP\u0026quot; : 无需估计方差组分，根据提供的先验直接求解混合线性模型方程组。    默认算法为：\u0026ldquo;AI_REML\u0026rdquo;\n 参数2：provided_blupf90_prior_file_path  用户提供的BLUPF90格式的方差组分-PRIOR文件的路径，character类型。\nNote:需要注意的一点是，BLUPF90格式的PRIOR文件和DMU格式的PRIOR文件是不相同的。关于二者的差异，以后有时间会再出一篇文章进行讲解，这里就不再赘述了。\n 参数3：provided_blupf90_prior_file_name  用户提供的BLUPF90格式的方差组分-PRIOR文件的名称，character类型。\n 参数4：provided_blupf90_prior_effect_name  用户提供的PRIOR文件中，与方差组分对应的各个随机效应名称，character类型。\n 参数5：BLUPf90_software_path  BLUPF90软件在本地的路径，character类型。\n","date":1618963200,"expirydate":-62135596800,"kind":"page","lang":"zh","lastmod":1618991259,"objectID":"539a6cc626f30df5ec24577dc6f65ed3","permalink":"/zh/post/feature-8-run_blupf90/blupf90/","publishdate":"2021-04-21T00:00:00Z","relpermalink":"/zh/post/feature-8-run_blupf90/blupf90/","section":"post","summary":"利用BLUPF90进行遗传评估","tags":[],"title":"R package:blupADC-功能8","type":"post"},{"authors":[],"categories":["DMU"],"content":"目录  简述 示例  单性状模型-系谱 单性状模型-GBLUP 单性状模型-Single-step(一步法) 多性状模型-系谱 单性状模型-系谱 (用户提供方差组分先验文件) 单性状模型-系谱 (包含母性效应) 单性状模型-系谱 (包含永久环境效应) 单性状模型-系谱 ( 包含随机回归效应) 单性状模型-系谱( 包含 社会遗传效应) 单性状模型-系谱( 包含 社会遗传效应)   参数详解  🤡基础参数 👺进阶参数      简述 🤠在讲述完各种各样的数据预处理方法后，我们正式进入到育种数据的分析层面。在目前的动植物育种领域，主要的育种软件包括但不限于以下两种：DMU和BLUPf90。这两款软件均是于上世纪80-90年代开发的，并且一直处于维护中。截至目前，两款软件的引用次数均已接近千次(实际可能更多), 这也足见这两款软件的认可度。\n但是，这两款软件均存在一个共同的缺点，就是使用起来较为麻烦(需要提供准备好的参数文件)。笔者当时学习参数文件的配置时，前前后后花费了近一个月的时间，足以见这两款软件的不友好性🥶。\n为此，我们在R中编写了相应的函数，使得用户可以轻松的完成两款软件参数文件的配置及对应的数据分析。本章我们主要讲述如何通过BLUP_ADC中的run_DMU函数，在R中调用DMU软件并完成数据分析。在下一章，我们将会讲述如何在R中调用BLUPf90软件，并完成数相应的据分析。\n👉 Note: 为了方便用户使用， blupADC 已经封装了DMU中的几个基本模块(dmu1,dmuai, and dmu5), 更多的模块可以从DMU官网进行下载(DMU下载网站).\n如果您想将DMU用作商业用途，请务必联系 DMU的作者！！！\n示例 单性状模型-系谱 library(blupADC)\rdata_path=system.file(\u0026quot;extdata\u0026quot;, package = \u0026quot;blupADC\u0026quot;) # 示例文件的路径\rrun_DMU(\rphe_col_names=c(\u0026quot;Id\u0026quot;,\u0026quot;Mean\u0026quot;,\u0026quot;Sex\u0026quot;,\u0026quot;Herd_Year_Season\u0026quot;,\u0026quot;Litter\u0026quot;,\u0026quot;Trait1\u0026quot;,\u0026quot;Trait2\u0026quot;,\u0026quot;Age\u0026quot;), # colnames of phenotype target_trait_name=list(c(\u0026quot;Trait1\u0026quot;)), #性状名称 fixed_effect_name=list(c(\u0026quot;Sex\u0026quot;,\u0026quot;Herd_Year_Season\u0026quot;)), #固定效应名称\rrandom_effect_name=list(c(\u0026quot;Id\u0026quot;,\u0026quot;Litter\u0026quot;)), #随机效应名称\rcovariate_effect_name=NULL, #协变量效应名称\rgenetic_effect_name=\u0026quot;Id\u0026quot;,\t#遗传效应名称 phe_path=data_path, #表型文件路径\rphe_name=\u0026quot;phenotype.txt\u0026quot;, #表型文件名\rinteger_n=5, #整型变量数\ranalysis_model=\u0026quot;PBLUP_A\u0026quot;, #遗传评估模型\rdmu_module=\u0026quot;dmuai\u0026quot;, #方差组分估计使用的DMU模块\rrelationship_path=data_path, #亲缘关系文件路径\rrelationship_name=\u0026quot;pedigree.txt\u0026quot;, #亲缘关系文件名\routput_result_path=\u0026quot;/root\u0026quot; #结果输出路径\r)\r 单性状模型-GBLUP library(blupADC)\rdata_path=system.file(\u0026quot;extdata\u0026quot;, package = \u0026quot;blupADC\u0026quot;) # 示例文件的路径\rrun_DMU(\rphe_col_names=c(\u0026quot;Id\u0026quot;,\u0026quot;Mean\u0026quot;,\u0026quot;Sex\u0026quot;,\u0026quot;Herd_Year_Season\u0026quot;,\u0026quot;Litter\u0026quot;,\u0026quot;Trait1\u0026quot;,\u0026quot;Trait2\u0026quot;,\u0026quot;Age\u0026quot;), # colnames of phenotype target_trait_name=list(c(\u0026quot;Trait1\u0026quot;)), #性状名称 fixed_effect_name=list(c(\u0026quot;Sex\u0026quot;,\u0026quot;Herd_Year_Season\u0026quot;)), #固定效应名称\rrandom_effect_name=list(c(\u0026quot;Id\u0026quot;,\u0026quot;Litter\u0026quot;)), #随机效应名称\rcovariate_effect_name=NULL, #协变量效应名称\rgenetic_effect_name=\u0026quot;Id\u0026quot;,\t#遗传效应名称 phe_path=data_path, #表型文件路径\rphe_name=\u0026quot;phenotype.txt\u0026quot;, #表型文件名\rinteger_n=5, #整型变量数\ranalysis_model=\u0026quot;GBLUP_A\u0026quot;, #遗传评估模型\rdmu_module=\u0026quot;dmuai\u0026quot;, #方差组分估计使用的DMU模块\rrelationship_path=data_path, #亲缘关系文件路径\rrelationship_name=\u0026quot;G_Ainv_col_three.txt\u0026quot;, #亲缘关系文件名\routput_result_path=\u0026quot;/root\u0026quot; #结果输出路径\r)\r 单性状模型-Single-step(一步法) library(blupADC)\rdata_path=system.file(\u0026quot;extdata\u0026quot;, package = \u0026quot;blupADC\u0026quot;) # 示例文件的路径\rrun_DMU(\rphe_col_names=c(\u0026quot;Id\u0026quot;,\u0026quot;Mean\u0026quot;,\u0026quot;Sex\u0026quot;,\u0026quot;Herd_Year_Season\u0026quot;,\u0026quot;Litter\u0026quot;,\u0026quot;Trait1\u0026quot;,\u0026quot;Trait2\u0026quot;,\u0026quot;Age\u0026quot;), # colnames of phenotype target_trait_name=list(c(\u0026quot;Trait1\u0026quot;)), #性状名称 fixed_effect_name=list(c(\u0026quot;Sex\u0026quot;,\u0026quot;Herd_Year_Season\u0026quot;)), #固定效应名称\rrandom_effect_name=list(c(\u0026quot;Id\u0026quot;,\u0026quot;Litter\u0026quot;)), #随机效应名称\rcovariate_effect_name=NULL, #协变量效应名称\rgenetic_effect_name=\u0026quot;Id\u0026quot;,\t#遗传效应名称 phe_path=data_path, #表型文件路径\rphe_name=\u0026quot;phenotype.txt\u0026quot;, #表型文件名\rinteger_n=5, #整型变量数\ranalysis_model=\u0026quot;SSBLUP_A\u0026quot;, #遗传评估模型\rdmu_module=\u0026quot;dmuai\u0026quot;, #方差组分估计使用的DMU模块\rrelationship_path=data_path, #亲缘关系文件路径\rrelationship_name=c(\u0026quot;pedigree.txt\u0026quot;,\u0026quot;G_A_col_three.txt\u0026quot;), #亲缘关系文件名\routput_result_path=\u0026quot;/root\u0026quot; #结果输出路径\r)\r 细心的同学应该能发现，我们仅需改变 analysis_model 及 relationship_name 这两个参数即可完成 系谱、GBLUP及SSBLUP的分析，极大的简化了我们的分析步骤(PS: G_Ainv_col_three.txt 和 G_A_col_three.txt 文件 均可通过 cal_kinship函数得到 了解更多)。\n上面我们介绍的都是单性状模型(只包括了一个目标性状)，而在实际育种分析中，多性状模型也是非常常见。在上面代码的基础上稍作修改，我们就能够非常方便的完成多性状模型的运算，如下：\n多性状模型-系谱 library(blupADC)\rdata_path=system.file(\u0026quot;extdata\u0026quot;, package = \u0026quot;blupADC\u0026quot;) # 示例文件的路径\rrun_DMU(\rphe_col_names=c(\u0026quot;Id\u0026quot;,\u0026quot;Mean\u0026quot;,\u0026quot;Sex\u0026quot;,\u0026quot;Herd_Year_Season\u0026quot;,\u0026quot;Litter\u0026quot;,\u0026quot;Trait1\u0026quot;,\u0026quot;Trait2\u0026quot;,\u0026quot;Age\u0026quot;), # colnames of phenotype target_trait_name=list(c(\u0026quot;Trait1\u0026quot;),c(\u0026quot;Trait2\u0026quot;)), #性状名称 fixed_effect_name=list(c(\u0026quot;Sex\u0026quot;,\u0026quot;Herd_Year_Season\u0026quot;),c(\u0026quot;Herd_Year_Season\u0026quot;)), #固定效应名称\rrandom_effect_name=list(c(\u0026quot;Id\u0026quot;,\u0026quot;Litter\u0026quot;),c(\u0026quot;Id\u0026quot;)), #随机效应名称\rcovariate_effect_name=NULL, #协变量效应名称\rgenetic_effect_name=\u0026quot;Id\u0026quot;,\t#遗传效应名称 phe_path=data_path, #表型文件路径\rphe_name=\u0026quot;phenotype.txt\u0026quot;, #表型文件名\rinteger_n=5, #整型变量数\ranalysis_model=\u0026quot;PBLUP_A\u0026quot;, #遗传评估模型\rdmu_module=\u0026quot;dmuai\u0026quot;, #方差组分估计使用的DMU模块\rrelationship_path=data_path, #亲缘关系文件路径\rrelationship_name=\u0026quot;pedigree.txt\u0026quot;, #亲缘关系文件名\routput_result_path=\u0026quot;/root\u0026quot; #结果输出路径\r)\r 单性状模型-系谱 (用户提供方差组分先验文件) library(blupADC)\rdata_path=system.file(\u0026quot;extdata\u0026quot;, package = \u0026quot;blupADC\u0026quot;) # path of provided files run_DMU(phe_col_names=c(\u0026quot;Id\u0026quot;,\u0026quot;Mean\u0026quot;,\u0026quot;Sex\u0026quot;,\u0026quot;Herd_Year_Season\u0026quot;,\u0026quot;Litter\u0026quot;,\r\u0026quot;Trait1\u0026quot;,\u0026quot;Trait2\u0026quot;,\u0026quot;Age\u0026quot;), # colnames of phenotype\rtarget_trait_name=list(c(\u0026quot;Trait1\u0026quot;)), #trait name fixed_effect_name=list(c(\u0026quot;Sex\u0026quot;,\u0026quot;Herd_Year_Season\u0026quot;)), #fixed effect name\rrandom_effect_name=list(c(\u0026quot;Id\u0026quot;,\u0026quot;Litter\u0026quot;)), #random effect name\rcovariate_effect_name=NULL, #covariate effect name\rgenetic_effect_name=\u0026quot;Id\u0026quot;,\t#遗传效应名称 phe_path=data_path, #path of phenotype file\rphe_name=\u0026quot;phenotype.txt\u0026quot;, #name of phenotype file\rprovided_prior_file_path=data_path, #path of user-provided prior file\rprovided_prior_file_name=\u0026quot;PAROUT\u0026quot;, #name of user-provided prior file\rinteger_n=5, #number of integer variable analysis_model=\u0026quot;PBLUP_A\u0026quot;, #model of genetic evaluation\rdmu_module=\u0026quot;dmuai\u0026quot;, #modeule of estimating variance components relationship_path=data_path, #path of relationship file relationship_name=\u0026quot;pedigree.txt\u0026quot;, #name of relationship file output_result_path=\u0026quot;/root\u0026quot; # output path )\r 单性状模型-系谱 (包含母性效应) library(blupADC)\rdata_path=system.file(\u0026quot;extdata\u0026quot;, package = \u0026quot;blupADC\u0026quot;) # 示例文件的路径\rrun_DMU(\rphe_col_names=c(\u0026quot;Herd\u0026quot;,\u0026quot;B_month\u0026quot;,\u0026quot;D_age\u0026quot;,\u0026quot;Litter\u0026quot;,\u0026quot;Sex\u0026quot;,\u0026quot;HY\u0026quot;,\u0026quot;ID\u0026quot;,\u0026quot;DAM\u0026quot;,\u0026quot;L_Dam\u0026quot;,\r\u0026quot;W_birth\u0026quot;,\u0026quot;W_2mth\u0026quot;,\u0026quot;W_4mth\u0026quot;,\u0026quot;G_0_2\u0026quot;,\u0026quot;G_0_4\u0026quot;,\u0026quot;G_2_4\u0026quot;), # colnames of phenotype\rtarget_trait_name=list(c(\u0026quot;W_birth\u0026quot;)), #trait name fixed_effect_name=list(c(\u0026quot;B_month\u0026quot;,\u0026quot;D_age\u0026quot;,\u0026quot;Litter\u0026quot;,\u0026quot;Sex\u0026quot;,\u0026quot;HY\u0026quot;)), #fixed effect name\rrandom_effect_name=list(c(\u0026quot;ID\u0026quot;,\u0026quot;L_Dam\u0026quot;)), #random effect name\rmaternal_effect_name=list(c(\u0026quot;DAM\u0026quot;)),\rgenetic_effect_name=\u0026quot;ID\u0026quot;, #遗传效应名称 covariate_effect_name=NULL, #covariate effect name\rphe_path=data_path, #path of phenotype file\rphe_name=\u0026quot;maternal_data\u0026quot;, #name of phenotype file\rinteger_n=9, #number of integer variable analysis_model=\u0026quot;PBLUP_A\u0026quot;, #model of genetic evaluation\rdmu_module=\u0026quot;dmuai\u0026quot;, #modeule of estimating variance components relationship_path=data_path, #path of relationship file relationship_name=\u0026quot;maternal_pedigree\u0026quot;, #name of relationship file output_result_path=\u0026quot;/root\u0026quot; # output path )\r 单性状模型-系谱 (包含永久环境效应) library(blupADC)\rdata_path=system.file(\u0026quot;extdata\u0026quot;, package = \u0026quot;blupADC\u0026quot;) # 示例文件的路径\rrun_DMU(\rphe_col_names=c(\u0026quot;id\u0026quot;,\u0026quot;year_grp\u0026quot;,\u0026quot;breed\u0026quot;,\u0026quot;time\u0026quot;,\u0026quot;t_dato\u0026quot;,\r\u0026quot;age\u0026quot;,\u0026quot;L1\u0026quot;,\u0026quot;L2\u0026quot;,\u0026quot;L3\u0026quot;,\u0026quot;gh\u0026quot;), # colnames of phenotype\rtarget_trait_name=list(c(\u0026quot;gh\u0026quot;)), #trait name fixed_effect_name=list(c(\u0026quot;year_grp\u0026quot;,\u0026quot;breed\u0026quot;,\u0026quot;time\u0026quot;)), #fixed effect name\rrandom_effect_name=list(c(\u0026quot;id\u0026quot;,\u0026quot;t_dato\u0026quot;)), #random effect name\rcovariate_effect_name=list(c(\u0026quot;age\u0026quot;)), #covariate effect name\tgenetic_effect_name=\u0026quot;id\u0026quot;, #遗传效应名称 included_permanent_effect=list(c(TRUE)), #whether include permant effect\rphe_path=data_path, #path of phenotype file\rphe_name=\u0026quot;rr_data\u0026quot;, #name of phenotype file\rinteger_n=5, #number of integer variable analysis_model=\u0026quot;PBLUP_A\u0026quot;, #model of genetic evaluation\rdmu_module=\u0026quot;dmuai\u0026quot;, #modeule of estimating variance components relationship_path=data_path, #path of relationship file relationship_name=\u0026quot;rr_pedigree\u0026quot;, #name of relationship file output_result_path=\u0026quot;/root\u0026quot; # output path )\r 单性状模型-系谱 ( 包含随机回归效应) library(blupADC)\rdata_path=system.file(\u0026quot;extdata\u0026quot;, package = \u0026quot;blupADC\u0026quot;) # 示例文件的路径\rrun_DMU(\rphe_col_names=c(\u0026quot;id\u0026quot;,\u0026quot;year_grp\u0026quot;,\u0026quot;breed\u0026quot;,\u0026quot;time\u0026quot;,\u0026quot;t_dato\u0026quot;,\r\u0026quot;age\u0026quot;,\u0026quot;L1\u0026quot;,\u0026quot;L2\u0026quot;,\u0026quot;L3\u0026quot;,\u0026quot;gh\u0026quot;), # colnames of phenotype\rtarget_trait_name=list(c(\u0026quot;gh\u0026quot;)), #trait name fixed_effect_name=list(c(\u0026quot;year_grp\u0026quot;,\u0026quot;breed\u0026quot;,\u0026quot;time\u0026quot;)), #fixed effect name\rrandom_effect_name=list(c(\u0026quot;id\u0026quot;,\u0026quot;t_dato\u0026quot;)), #random effect name\rcovariate_effect_name=list(c(\u0026quot;age\u0026quot;)), #covariate effect name\tgenetic_effect_name=\u0026quot;id\u0026quot;, #遗传效应名称 included_permanent_effect=list(c(TRUE)), #whether include permant effect\rrandom_regression_effect_name=list(c(\u0026quot;L1\u0026amp;id\u0026quot;,\u0026quot;L1\u0026amp;pe_effect\u0026quot;,\u0026quot;L2\u0026amp;id\u0026quot;,\u0026quot;L2\u0026amp;pe_effect\u0026quot;)), #random regression effect name\rphe_path=data_path, #path of phenotype file\rphe_name=\u0026quot;rr_data\u0026quot;, #name of phenotype file\rinteger_n=5, #number of integer variable analysis_model=\u0026quot;PBLUP_A\u0026quot;, #model of genetic evaluation\rdmu_module=\u0026quot;dmuai\u0026quot;, #modeule of estimating variance components relationship_path=data_path, #path of relationship file relationship_name=\u0026quot;rr_pedigree\u0026quot;, #name of relationship file output_result_path=\u0026quot;/root\u0026quot; # output path )\r 单性状模型-系谱( 包含 社会遗传效应) 用户提供的表型文件不需要包含 最大群体大小相关的列\nlibrary(blupADC)\rdata_path=system.file(\u0026quot;extdata\u0026quot;, package = \u0026quot;blupADC\u0026quot;) # 示例文件的路径\rrun_DMU(\rphe_col_names=c(\u0026quot;Id\u0026quot;,\u0026quot;Group\u0026quot;,\u0026quot;Sex\u0026quot;,\u0026quot;Phe\u0026quot;), # colnames of phenotype\rtarget_trait_name=list(c(\u0026quot;Phe\u0026quot;)), #trait name fixed_effect_name=list(c(\u0026quot;Sex\u0026quot;)), #fixed effect name\rrandom_effect_name=list(c(\u0026quot;Id\u0026quot;,\u0026quot;Group\u0026quot;)), #random effect name\rcovariate_effect_name=NULL, #covariate effect name\tgenetic_effect_name=\u0026quot;Id\u0026quot;, #遗传效应名称 include_social_effect=list(c(TRUE)), group_effect_name=\u0026quot;Group\u0026quot;,\rphe_path=data_path, #path of phenotype file\rphe_name=\u0026quot;raw_social_data\u0026quot;, #name of phenotype file\rinteger_n=3, #number of integer variable analysis_model=\u0026quot;PBLUP_A\u0026quot;, #model of genetic evaluation\rdmu_module=\u0026quot;dmuai\u0026quot;, #modeule of estimating variance components relationship_path=data_path, #path of relationship file relationship_name=\u0026quot;socail_pedigree\u0026quot;, #name of relationship file output_result_path=\u0026quot;/root\u0026quot; # output path )\r 单性状模型-系谱( 包含 社会遗传效应) 用户提供的表型文件需要包含 最大群体大小相关的列\nlibrary(blupADC)\rdata_path=system.file(\u0026quot;extdata\u0026quot;, package = \u0026quot;blupADC\u0026quot;) # 示例文件的路径\rrun_DMU(phe_col_names=c(\u0026quot;Id\u0026quot;,\u0026quot;Group\u0026quot;,\u0026quot;Sex\u0026quot;,\u0026quot;Gr_id1\u0026quot;,\u0026quot;Gr_id2\u0026quot;,\u0026quot;Gr_id3\u0026quot;,\u0026quot;Gr_id4\u0026quot;,\u0026quot;Gr_id5\u0026quot;, \u0026quot;Phe\u0026quot;,\u0026quot;Status_Gr_id1\u0026quot;,\u0026quot;Status_Gr_id2\u0026quot;,\u0026quot;Status_Gr_id3\u0026quot;,\u0026quot;Status_Gr_id4\u0026quot;,\u0026quot;Status_Gr_id5\u0026quot;),# colnames of phenotype\rtarget_trait_name=list(c(\u0026quot;Phe\u0026quot;)), #trait name fixed_effect_name=list(c(\u0026quot;Sex\u0026quot;)), #fixed effect name\rrandom_effect_name=list(c(\u0026quot;Id\u0026quot;,\u0026quot;Group\u0026quot;)), #random effect name\rcovariate_effect_name=NULL,\rgenetic_effect_name=\u0026quot;Id\u0026quot;,\t#遗传效应名称 include_social_effect=list(c(TRUE)), #whether include social genetic effect integer_group_names=c(\u0026quot;Gr_id1\u0026quot;,\u0026quot;Gr_id2\u0026quot;,\u0026quot;Gr_id3\u0026quot;,\u0026quot;Gr_id4\u0026quot;,\u0026quot;Gr_id5\u0026quot;), #integer variable name of max group size real_group_names= c(\u0026quot;Status_Gr_id1\u0026quot;,\u0026quot;Status_Gr_id2\u0026quot;,\u0026quot;Status_Gr_id3\u0026quot;,\u0026quot;Status_Gr_id4\u0026quot;,\u0026quot;Status_Gr_id5\u0026quot;), #real variable name of max group size\rphe_path=data_path, #path of phenotype file\rphe_name=\u0026quot;social_data\u0026quot;, #name of phenotype file\rinteger_n=8, #number of integer variable analysis_model=\u0026quot;PBLUP_A\u0026quot;, #model of genetic evaluation\rdmu_module=\u0026quot;dmuai\u0026quot;, #modeule of estimating variance components relationship_path=data_path, #path of relationship file relationship_name=\u0026quot;socail_pedigree\u0026quot;, #name of relationship file output_result_path=\u0026quot;/root\u0026quot; # output path )\r 我们将对run_DMU函数中的参数一一进行讲解。\n参数详解 🤡基础参数  参数1：phe_path  本地表型数据文件的路径，character类型。\n 参数2：phe_name  本地表型数据文件的名称，character类型。\n 参数3：phe_col_names  表型数据的列名，character类型。\n 参数4：integer_n  整型变量的数目，numeric类型。\n 参数5：genetic_effect_name  遗传效应的名称(一般为个体号)，character类型。\n 参数6：target_trait_name  目标性状的名称，list类型。 每个列表均代表一个性状。\n通过添加多个性状的名称，我们即可完成多性状模型的分析，e.g. target_trait_name=list(c(\u0026quot;Trait1\u0026quot;),c(\u0026quot;Trait2\u0026quot;)) 即可完成 Trait1 和 Trait2的双性状模型\n 参数7：fixed_effect_name  目标性状的固定效应名称，list类型。在多性状模型中，fixed_effect_name为每个性状的固定效应名称向量组成的列表结构，性状的顺序需与target_trait_name一一对应。\ne.g. 第一个性状的固定效应名称为： c(\u0026quot;Sex\u0026quot;,\u0026quot;Herd_Year_Season\u0026quot;)\n第二个性状的固定效应名称为：c(\u0026quot;Sex\u0026quot;)\n那么fixed_effect_name=list(c(\u0026quot;Sex\u0026quot;,\u0026quot;Herd_Year_Season\u0026quot;),c(\u0026quot;Sex\u0026quot;))\n 参数8：random_effect_name  目标性状的随机效应名称，list类型。在多性状模型中，random_effect_name为每个性状的随机效应名称向量组成的列表结构，性状的顺序需与target_trait_name一一对应。\ne.g. 第一个性状的随机效应名称为： c(\u0026quot;Id\u0026quot;,\u0026quot;Litter\u0026quot;)\n第二个性状的随机效应名称为：c(\u0026quot;Id\u0026quot;)\n那么random_effect_name=list(c(\u0026quot;Id\u0026quot;,\u0026quot;Litter\u0026quot;),c(\u0026quot;Id\u0026quot;))\n 参数9：covariate_effect_name  目标性状的协变量效应名称，list类型。在多性状模型中，random_effect_name为每个性状的协变量效应名称向量组成的列表结构，性状的顺序需与target_trait_name一一对应。\ne.g. 第一个性状的协变量效应名称为： c(\u0026quot;Age\u0026quot;)\n第二个性状的协变量效应名称为：NULL (意味着无协变量)\n那么covariate_effect_name=list(c(\u0026quot;Age\u0026quot;),NULL) \n 参数10：maternal_effect_name  母性效应名称(一般为母亲名称), list 类型.\n在多性状模型中，maternal_effect_name为每个性状的母性效应名称向量组成的列表结构，性状的顺序需与target_trait_name一一对应。\neg. target_trait_name=list(c(\u0026quot;Trait1\u0026quot;),c(\u0026quot;Trait2\u0026quot;))\nmaternal_effect_name=list(c(NULL),c(\u0026quot;Dam\u0026quot;))\n 参数11：random_regression_effect_name  随机回归效应名称, list 类型.\n在多性状模型中，random_regression_effect_name为每个性状的随机回归效应名称向量组成的列表结构，性状的顺序需与target_trait_name一一对应。\neg. target_trait_name=list(c(\u0026quot;Trait1\u0026quot;),c(\u0026quot;Trait2\u0026quot;))\nrandom_regression_effect_name=list(c(\u0026quot;L1\u0026amp;id\u0026quot;,\u0026quot;L1\u0026amp;pe_effect\u0026quot;,\u0026quot;L2\u0026amp;id\u0026quot;,\u0026quot;L2\u0026amp;pe_effect\u0026quot;),c(\u0026quot;L1\u0026amp;id\u0026quot;,\u0026quot;L1\u0026amp;pe_effect\u0026quot;,\u0026quot;L2\u0026amp;id\u0026quot;,\u0026quot;L2\u0026amp;pe_effect\u0026quot;))\n在每个列表中, \u0026amp; 左边 代表的是多项式系数名称, \u0026amp; 右边 代表的是嵌套在多项式里的相应的随机效应名称。 如果用户想将 永久环境效应也嵌套在多项式里，\u0026amp; 右边 代表的随机效应名称应设置为 \u0026ldquo;pe_effect\u0026rdquo;，并且需要设置 included_permanent_effect 参数为 TRUE。\n 参数12: included_permanent_effect  是否包括永久环境效应在分析中,list 类型.\n在多性状模型中，included_permanent_effect为每个逻辑向量组成的列表结构，性状的顺序需与target_trait_name一一对应。\neg. target_trait_name=list(c(\u0026quot;Trait1\u0026quot;),c(\u0026quot;Trait2\u0026quot;))\nincluded_permanent_effect=list(c(TRUE),c(TRUE))\n 参数13：include_social_effect  是否包括社会遗传效应在分析中,list 类型.\n在多性状模型中，include_social_effect为每个逻辑向量组成的列表结构，性状的顺序需与target_trait_name一一对应。\neg. target_trait_name=list(c(\u0026quot;Trait1\u0026quot;),c(\u0026quot;Trait2\u0026quot;))\ninclude_social_effect=list(c(TRUE),c(TRUE))\n 参数14：group_effect_name  Group效应的名称在社会遗传效应分析中， character 类型。\n当用户提供的表型数据中不包含最大群体大小相关的列时，用户需要提供 group_effect_name 参数。 当用户提供了 Group效应的名称后， 软件将会自动生成包含 最大群体大小相关的列的表型并进行后续的社会遗传分析。\n 参数15：integer_group_names  最大群体大小相关的整型列的变量名称, character 类型。\n当用户提供的表型数据中包含最大群体大小相关的列时, 用户需要指定 最大群体大小相关的整型列的变量名称。\n 参数16：real_group_names  最大群体大小相关的实型列的变量名称, character 类型。\n当用户提供的表型数据中包含最大群体大小相关的列时, 用户需要指定 最大群体大小相关的实型列的变量名称。\n  参数17：analysis_model\n遗传评估的分析模型，character类型。可选模型包括：\n \u0026quot;PBLUP_A\u0026quot; : 系谱-加性效应模型 \u0026quot;GBLUP_A\u0026quot; :基因组-加性效应模型 \u0026quot;GBLUP_AD\u0026quot; :基因组-加性-显性效应模型 \u0026quot;SSBLUP_A\u0026quot; :一步法加性效应模型 \u0026quot;User_define\u0026quot;: 用户自定义模型    参数18：dmu_module\nDMU分析时使用的模块，character类型。可选模块包括：\n  \u0026quot;dmuai\u0026quot;\n  \u0026quot;dmu4\u0026quot;\n  \u0026quot;dmu5\u0026quot;\n    参数19：DMU_software_path\n  DMU软件在本地的路径，character类型。\n 参数20：relationship_path  提供的亲缘关系文件的路径，character类型。\n 参数21：relationship_name  提供的亲缘关系文件的名称，character类型。\n针对不同的遗传评估分析模型，我们需要提供不同类型的亲缘关系文件。\n针对 \u0026ldquo;PBLUP_A\u0026quot;模型，我们需要提供系谱文件,e.g. relationship_name=\u0026quot;pedigree.txt\u0026quot; ；\n针对\u0026quot;GBLUP_A\u0026quot; 或 \u0026quot;GBLUP_AD\u0026quot;模型，我们需要提供3列格式的基因组亲缘关系矩阵的逆矩阵文件, e.g. relationship_name=c(\u0026quot;G_A_inv_matrix.txt\u0026quot;,\u0026quot;G_D_inv_matrix.txt\u0026quot;)；\n针对 \u0026quot;SSBLUP_A\u0026quot;模型, 我们需要同时提供系谱文件及3列格式的基因组亲缘关系矩阵的文件, e.g. relationship_name=c(\u0026quot;pedigree.txt\u0026quot;,\u0026quot;G_A_matrix.txt\u0026quot;) 。\n 参数22：output_result_path  DMU运行结果的保存路径，character类型。\n 参数23：output_ebv_path  输出的育种值、残差及校正表型文件的保存路径，character类型。\n 参数24：output_ebv_name  输出的育种值、残差及校正表型文件的名称，character类型。\n👺进阶参数  参数25: provided_effect_file_path  性状效应记录文件的路径，character类型。为了方便用户输入固定效应、随机效应及协变量效应，用户可以在本地直接提供相应的文件，格式如下所示：\n   V1 V2 V3 V4 V5 V6 V7 V8 V9     Trait1 * Sex Herd_Year_Season * Id Litter * *   Trait2 * Sex * Id * Age *     每类效应都用*隔开，每一列的间隔均为制表符间隔。每个性状所在的行均有4个，第1-2个*之间的效应代表的是固定效应，第2-3个* 之间的效应代表的是随机效应，第3-4个* 之间的效应代表的是协变量效应。\n 参数26：provided_effect_file_name  性状效应记录文件的名称，character类型。\n 参数27：provided_DIR_file_path  用户自己提供的DIR文件的路径，character类型。\n 参数28：provided_DIR_file_name  用户自己提供的DIR文件的名称，character类型。\n 参数29：included_permanent_effect  是否进行永久环境效应分析，logical类型，默认为FASLE。\n 参数30：dmu_algorithm_code  DMU模块内的算法代码，numeric类型。\n 参数31：provided_prior_file_path  用户提供的方差组分-PRIOR文件的路径，character类型。\n 参数32：provided_prior_file_name  用户提供的方差组分-PRIOR文件的名称，character类型。\n 参数33：missing_value  表型数据的缺失值，numeric类型，默认为 -9999。\n 参数34：iteration_criteria  方差组分迭代收敛的标准，numeric类型，默认为 1.0e-7。\n 参数35：genetic_effect_number  SOL文件中，遗传效应所代表的数字，numeric类型，默认为4。\n 参数36：residual_cov_trait  残差协方差约束为0的性状，list类型。e.g. 将Trait1和Trait2的残差协方差约束为0，residual_cov_trait=list(c(\u0026quot;Trait1\u0026quot;,\u0026quot;Trait2\u0026quot;))\n 参数37：selected_id  只输出这部分个体的育种值、残差及校正表型，character类型。\n 参数38：cal_debv  是否计算DEBV，logical类型，默认为FALSE。\n 参数39：debv_pedigree_path  计算DEBV时，提供的系谱文件的路径，character类型。\n 参数40：debv_pedigree_name  计算DEBV时，提供的系谱文件的名称，character类型。\n","date":1618876800,"expirydate":-62135596800,"kind":"page","lang":"zh","lastmod":1618914678,"objectID":"5814be3e29f082ce7eea6171a9d56fcb","permalink":"/zh/post/feature-7-run_dmu/run_dmu/","publishdate":"2021-04-20T00:00:00Z","relpermalink":"/zh/post/feature-7-run_dmu/run_dmu/","section":"post","summary":"利用DMU进行遗传评估","tags":[],"title":"R package:blupADC-功能7","type":"post"},{"authors":[],"categories":["Relationship matrix"],"content":"目录  简述 示例 参数详解  💪基础参数 🦶进阶参数      简述 🙉在动植物育种中，亲缘关系矩阵的构建是其中的关键步骤。在本章，我们将主要介绍如何利用blupADC中的cal_kinship函数完成各种亲缘关系矩阵的构建，包括：加性亲缘关系矩阵(系谱，基因组，一步法)及显性亲缘关系矩阵(系谱，基因组，一步法)等。此外，cal_kinship函数还能方便的计算各种类型的近交系数，包括：系谱近交系数，基因组近交系数(Homozygous,Digonal)及一步法近交系数(Digonal)。\n示例 😾首先，我们还是通过一个小例子来看该函数的用法:\nlibrary(blupADC)\rkinship_result=cal_kinship(\rinput_data_hmp=data_hmp, #provided hapmap data object\rkinship_type=c(\u0026quot;G_A\u0026quot;,\u0026quot;G_D\u0026quot;), #type of kinship matrix\rdominance_type=c(\u0026quot;genotypic\u0026quot;), #type of dominance effect\rinbred_type=c(\u0026quot;Homozygous\u0026quot;), #type of inbreeding coefficients\rreturn_result=TRUE) #return result  在构建基因组亲缘关系矩阵及一步法亲缘关系矩阵的时候，我们必须要事先提供基因型数据，这部分的参数与genotype_data_format_conversion函数中的参数用法一致。具体大家可参阅之前的介绍:基因型数据间的格式转换。\n完成了基因型数据的提供后，我们可以通过以下几个参数来指定构建亲缘关系矩阵类型及近交系数的类型。\n参数详解 💪基础参数   参数1：kinship_type\n指定构建亲缘关系矩阵的类型，character类型。可选关系矩阵类型：\n \u0026ldquo;G_A\u0026rdquo; :基因组加性亲缘关系矩阵\u0026quot; \u0026ldquo;G_Ainv\u0026rdquo; :基因组加性亲缘关系逆矩阵\u0026quot; \u0026ldquo;G_D\u0026rdquo; :基因组显性亲缘关系矩阵 \u0026ldquo;G_Dinv\u0026rdquo; :基因组显性亲缘关系逆矩阵\u0026quot; \u0026ldquo;P_A\u0026rdquo; :系谱加性亲缘关系矩阵 \u0026ldquo;P_Ainv\u0026rdquo; :系谱加性亲缘关系逆矩阵 \u0026ldquo;P_D\u0026rdquo; :系谱显性亲缘关系矩阵 \u0026ldquo;P_Dinv\u0026rdquo; :系谱显性亲缘关系逆矩阵 \u0026ldquo;H_A\u0026rdquo; :一步法加性亲缘关系矩阵 \u0026ldquo;H_Ainv\u0026rdquo; :一步法加性亲缘关系逆矩阵 \u0026ldquo;H_D\u0026rdquo; :一步法显性亲缘关系矩阵 \u0026ldquo;H_Dinv\u0026rdquo; :一步法显性亲缘关系逆矩阵    Note:如果计算系谱及一步法亲缘关系矩阵，必须要提供系谱数据。关于如何提供系谱数据，我们会在后面进行讲解。\n  参数2：dominance_type\n指定计算的显性亲缘关系矩阵的类型，character类型，可选类型包括:\n \u0026ldquo;genotypic\u0026rdquo; : 按照($0-2pq$,$1-2pq$,$0-2pq$)方式编码方式构建显性亲缘关系矩阵 \u0026ldquo;classical\u0026rdquo; : 按照($-2q^2$,$2pq$,$-2p^2$)方式编码方式构建显性亲缘关系矩阵     关于二者的区别，具体可阅读该文献：On the Additive and Dominant Variance and Covariance of Individuals Within the Genomic Selection Scope\n   参数3：inbred_type\n指定计算的近交系数的类型，character类型。可选近交系数类型包括:\n  \u0026ldquo;Homozygous\u0026rdquo; :根据纯合子位点计算\n  \u0026ldquo;G_Diag\u0026rdquo; :G矩阵对角线-1\n  \u0026ldquo;H_diag\u0026rdquo; :H矩阵对角线-1\n  \u0026ldquo;Pedigree\u0026rdquo; :A矩阵对角线-1\n    参数4：input_pedigree\n  用户提供的系谱数据，data.frame或 matrix类型。具体的系谱数据格式可以参阅之前的介绍：系谱追溯、重命名及纠错 。\n 参数5：pedigree_rename  是否对系谱数据进行重命名,logical类型，默认为TRUE(对系谱进行重命名)。\n 参数6：IND_geno_rename  是否根据系谱的重命名结果对基因型数据中的个体进行重命名，logical类型，默认为FALSE(不进行重命名)。\n 参数7：rename_to_origin  将亲缘关系矩阵中重命名的个体号转换回原始的个体号，logical类型，默认为FALSE(不进行转换)。\n 参数8：output_matrix_type  输出亲缘关系矩阵的格式，character类型。可选参数包括：\n  \u0026ldquo;col_all\u0026rdquo; :按照n*n的格式输出亲缘关系矩阵\n  \u0026ldquo;col_three\u0026rdquo; : 按照3列矩阵的格式输出亲缘关系矩阵，第1列和第2列为个体号，第3列为亲缘系数。DMU和BLUPf90软件均需提供这种格式的亲缘关系矩阵。形如：\n          1001 1001 0.989   1001 1002 0.421   1001 1003 0.567      默认参数为 \u0026ldquo;col_three\u0026rdquo;\n 参数9：output_matrix_path  亲缘关系矩阵保存到本地的路径, character类型。\n 参数10：output_matrix_name  亲缘关系矩阵保存到本地的名称，character类型。\n🦶进阶参数  参数11：cpu_cores  调用的cpu个数，numeric类型，默认为1。\n 参数12：kinship_base  是否按照基础群的方式构建基因组亲缘关系矩阵(p=q=0.5)，logical类型，默认为FALSE。\n 参数13：kinship_trace  是否按照矩阵迹和的方式对基因组亲缘关系矩阵进行标准化，logical类型，默认为FALSE。\n 参数14：Metafounder_algorithm  是否按照metafounder的方法计算一步法亲缘关系矩阵，logical类型，默认为FALSE。\n 参数15：APY_algorithm  是否按照APY的方法计算亲缘关系矩阵的逆矩阵，logical类型，默认为FALSE。\n 参数16：APY_eigen_threshold  特征值所能解释的遗传变异的比例的阈值 , numeric 类型. 默认为 0.95.\n 参数17：APY_n_core  核心个体数, numeric 类型. 默认为 NULL.\n 参数18：SSBLUP_omega  构建一步法亲缘关系矩阵时G矩阵和A矩阵的比例，numeric类型，默认为0.05。\n 参数19：gene_dropping  是否使用 gene dropping 的方法构建系谱显性亲缘关系矩阵，logical类型，默认为FALSE。\n 参数20：gene_dropping_iteration  gene dropping方法的迭代次数，numeric类型，默认为1000。\n 参数21：memory_save  是否使用省内存的方式进行上述所有的计算，logical类型，默认为FALSE。该方法非常节省内存，但是会极大的占据本地存储空间。\n","date":1618790400,"expirydate":-62135596800,"kind":"page","lang":"zh","lastmod":1618734999,"objectID":"468e5be35eedbea18bb02ed0ab82f3b5","permalink":"/zh/post/feature-6-kinship_matrix/relationship_matrix/","publishdate":"2021-04-19T00:00:00Z","relpermalink":"/zh/post/feature-6-kinship_matrix/relationship_matrix/","section":"post","summary":"计算亲缘关系矩阵(A,G and H)","tags":[],"title":"R package:blupADC-功能6","type":"post"},{"authors":[],"categories":["Pedigree"],"content":"目录  简介 示例  绘制系谱中所有个体 绘制系谱中的子集 绘制系谱中的子集 (考虑子集的同胞) 系谱图的样式   参数详解  💥基础参数 💨进阶参数      简介 🦄 一个直观和清楚的系谱结构图能够帮助育种家和研究者做出更好的育种规划。通过使用 ggped 函数, 用户即能非常简单的绘制出所需的系谱图。\n示例 绘制系谱中所有个体 library(blupADC)\rpedigree_result=ggped(\rinput_pedigree=plot_pedigree\r)  绘制系谱中的子集 library(blupADC)\rpedigree_result=ggped(\rinput_pedigree=plot_pedigree,\rtrace_id=c(\u0026quot;121\u0026quot;) #provided subset-id\r)  绘制系谱中的子集 (考虑子集的同胞) library(blupADC)\rpedigree_result=ggped(\rinput_pedigree=plot_pedigree,\rtrace_id=c(\u0026quot;121\u0026quot;),\rtrace_sibs=TRUE #whether plot the sibs of subset-id )  系谱图的样式 通过修改shape_type参数， 用户即可改变系谱图的样式。默认的 shape_type 为 4。\n参数详解 💥基础参数  参数1：input_pedigree  用户提供的系谱数据, data.frame  或者 matrix 类型.\n💌提供的系谱数据类型应为3列如下的3列结构：\n   Offspring Sire Dam     DD19575312 DD18768902 DD16376015   DD19513112 DD18768902 DD17111017   DD20348012 DD19132207 DD19234510   DD20361110 DD19331001 DD19293112   DD20471212 DD19331001 DD19320808   DD20564818 DD19331001 DD19311009     **参数2: trace_id **  追溯子集的系谱, character 类型. 默认为 NULL (绘制系谱中所有个体)\n 参数3: trace_sibs  追溯子集的系谱过程中，是否追溯子集的同胞 , logical 类型. 默认为 FALSE .\n **参数4: ind_sex **  个体的性别记录 , data.frame 类型.\n数据格式如下:\n   Individual Sex     101 Male   102 Female   103 Male   104 Female     **参数5：plot_family **  绘制系谱过程中，是否划分家系结构，logical 类型. 默认为 FALSE .\n **参数6：shape_type **  系谱图的样式，numeric 类型. 默认为 4.\n💨进阶参数  参数7: shape_size  系谱图的大小, numeric 类型. 默认为 8 .\n 参数8：ind_text_size  个体名称的文本大小, numeric 类型. 默认为 4` .\n 参数9：ind_text_vjust  个体名称的文本垂直距离, numeric 类型. 默认为 3 .\n","date":1618704000,"expirydate":-62135596800,"kind":"page","lang":"zh","lastmod":1618533163,"objectID":"bc1e440dd4f54a06c26e1cc5c33f8a9a","permalink":"/zh/post/feature-5-visualize_pedigree/pedigree/","publishdate":"2021-04-18T00:00:00Z","relpermalink":"/zh/post/feature-5-visualize_pedigree/pedigree/","section":"post","summary":"系谱可视化 ","tags":[],"title":"R package:blupADC-功能 5","type":"post"},{"authors":[],"categories":["pedigree"],"content":"目录  简介 示例 参数详解  💥基础参数 💨进阶参数      简介 🦄大家好,这一节主要给大家讲述的是如何使用blupADC中的函数来进行系谱数据处理。blupADC提供的trace_pedigree函数，可以帮助我们非常方便的对系谱数据进行多种处理:包括系谱重命名、系谱追溯及系谱纠错等。\n示例 💖同样的，我们还是用一个小例子来简单的看下该函数的用法\nlibrary(blupADC)\rpedigree_result=trace_pedigree(\rinput_pedigree=origin_pedigree, #provided pedigree data object\routput_pedigree_tree=TRUE # output pedigree tree\r)  我们可以通过str查看函数的输出结果，如下所示:\nstr(pedigree_result)\r## List of 5\r## $ ped : chr [1:15945, 1:3] \u0026quot;DD19348310\u0026quot; \u0026quot;DD19386807\u0026quot; \u0026quot;DD19119705\u0026quot; \u0026quot;DD16007415\u0026quot; ...\r## ..- attr(*, \u0026quot;dimnames\u0026quot;)=List of 2\r## .. ..$ : NULL\r## .. ..$ : chr [1:3] \u0026quot;Offspring\u0026quot; \u0026quot;Sire\u0026quot; \u0026quot;Dam\u0026quot;\r## $ rename_ped :'data.frame':\t15945 obs. of 6 variables:\r## ..$ Offspring : chr [1:15945] \u0026quot;DD19348310\u0026quot; \u0026quot;DD19386807\u0026quot; \u0026quot;DD19119705\u0026quot; \u0026quot;DD16007415\u0026quot; ...\r## ..$ Generation : num [1:15945] 0 0 0 0 0 0 0 0 0 0 ...\r## ..$ Offspring_Id: int [1:15945] 1 2 3 4 5 6 7 8 9 10 ...\r## ..$ Sire_Id : num [1:15945] 0 0 0 0 0 0 0 0 0 0 ...\r## ..$ Dam_Id : num [1:15945] 0 0 0 0 0 0 0 0 0 0 ...\r## ..$ Order : int [1:15945] 1 2 3 4 5 6 7 8 9 10 ...\r## $ pedigree_tree: chr [1:15945, 1:15] \u0026quot;DD19348310\u0026quot; \u0026quot;DD19386807\u0026quot; \u0026quot;DD19119705\u0026quot; \u0026quot;DD16007415\u0026quot; ...\r## ..- attr(*, \u0026quot;dimnames\u0026quot;)=List of 2\r## .. ..$ : NULL\r## .. ..$ : chr [1:15] \u0026quot;Offspring\u0026quot; \u0026quot;Sire\u0026quot; \u0026quot;Dam\u0026quot; \u0026quot;SireSire\u0026quot; ...\r## $ error_id_set :List of 4\r## ..$ error_duplicated_id: chr [1:24] \u0026quot;DD19119705\u0026quot; \u0026quot;DD20488904\u0026quot; \u0026quot;DD20153801\u0026quot; \u0026quot;DD20376912\u0026quot; ...\r## ..$ error_sex_id: chr \u0026quot;DD13006182\u0026quot;\r## ..$ error_breed_id: NULL\r## ..$ error_birth_date_id: NULL\r 可以很明显的看到,输出结果包括以下几个部分:\n ped: 经过处理后(纠错、追溯等)的原始系谱数据且未进行重命名 rename_ped: 经过处理(纠错、追溯等)且重命名的系谱数据。第1列为原始系谱ID,第2列为个体在系谱中的代数，第3-5列为重命名后的系谱数据 pedigree_tree:个体的系谱树矩阵。可以通过设置 pedigree_tree_depth指定系谱树包含的代数，默认不输出系谱树(节省时间) error_id_set: 系谱记录错误个体数据集。根据错误的种类可以分为以下4个子集  error_duplicated_id: 相同的个体，父母却不相同 error_sex_id: 个体同时出现在父亲列和母亲列 error_breed_id: 个体和父母的品种不相同(仅针对特殊格式) error_birth_date_id: 个体的出生日期要早于父母的出生日期(需在系谱的第四列提供个体的出生日期)    下面，我们将具体讲解trace_pedigree函数中各种参数的含义:\n参数详解 💥基础参数  参数1：input_pedigree  用户提供的系谱数据，data.frame或 matrix类型。\n💌用户提供系谱数据需为以下几种格式中的一种，包括：\n 3列系谱格式:     Offspring Sire Dam     DD19575312 DD18768902 DD16376015   DD19513112 DD18768902 DD17111017   DD20348012 DD19132207 DD19234510   DD20361110 DD19331001 DD19293112   DD20471212 DD19331001 DD19320808   DD20564818 DD19331001 DD19311009     4列系谱格式:     Offspring Sire Dam Birth_Date     DD19575312 DD18768902 DD16376015 20200101   DD19513112 DD18768902 DD17111017 20200102   DD20348012 DD19132207 DD19234510 20200103   DD20361110 DD19331001 DD19293112 20200104   DD20471212 DD19331001 DD19320808 20200105   DD20564818 DD19331001 DD19311009 20200106     多列系谱格式:     Offspring Sire Dam SireSire DamSire SireSireSire     DD20231905 DD19581002 DD18750810 DD16785512 DD15507717 DD14008512   DD20458701 DD19564302 DD18925809 DD15349017 DD15245411 DD16771212   DD20324707 DD19232903 DD18571012 DD16794714 DD16744412 DD16714516   DD19288609 DD18713408 DD18552609 DD15180015 DD15479214 DD15243711   DD16222012 DD15145005 DD15378812 DD14110014 DD15501518 DD15206217   DD17684713 DD16672107 DD15122311 DD15505715 DD15347415 DD16383111    Note:需要注意的是，当系谱为多列时，用户必须要设置 multi_col=TRUE, 并且系谱的列名需要标注为特殊形式,e.g. SireSire:父亲的父亲, SirSireSire:父亲的父亲的父亲.\n系谱数据中缺失值可以设置为: NA或0。\n同样的，为了便于用户操作，用户还可以直接提供本地系谱数据的路径和名称\n 参数2：input_pedigree_path  本地系谱数据的路径,character类型。\n 参数3：input_pedigree_name  本地系谱数据的名称，character类型。\n 参数4：multi_col  是否将提供的多列系谱转换到3列，logical类型。如果用户提供的系谱数据包含多列，那么用户必须设置multi_col 。\n 参数5：trace_id  在追溯系谱时，所追溯的个体集, character 类型. 默认为 NULL ， 即追溯系谱中的所有个体\n 参数6：trace_generation  在追溯系谱时，所追溯的最大代数, numeric 类型。默认为 NULL ， 即追溯系谱中的全部代数。\n 参数7：trace_birth_date  追溯出生日期不早于指定日期的个体，numeric类型。个体出生日期早于用户提供的出生日期将会被排除在系谱追溯过程中。\n 参数8：output_pedigree_path  系谱输出到本地的路径，character类型。\n 参数9：output_pedigree_name  系谱输出到本地的名称，character类型。\n💨进阶参数  参数10：dup_error_check  检查相同个体的父母却不相同的错误，logical类型，默认为TRUE。\n 参数11：sex_error_check  检查个体同时出现在父亲列和母亲列的错误，logical类型，默认为TRUE。\n 参数12：birth_date_error_check  检查个体出生日期早于父母的错误，logical类型，默认为FALSE。\n 参数13：output_pedigree_tree  是否输出系谱树，logical类型，默认为FALSE。\n 参数14：pedigree_tree_depth  系谱树的深度(系谱代数)，numeric类型，默认为3。\n","date":1618617600,"expirydate":-62135596800,"kind":"page","lang":"zh","lastmod":1618536763,"objectID":"fe2f55752ee6c514480937e584241f12","permalink":"/zh/post/feature-4-trace_pedigree/pedigree/","publishdate":"2021-04-17T00:00:00Z","relpermalink":"/zh/post/feature-4-trace_pedigree/pedigree/","section":"post","summary":"系谱数据追溯与重命名","tags":[],"title":"R package:blupADC-功能4","type":"post"},{"authors":[],"categories":["Check genotype"],"content":"\r\r\r目录  Overview\r👦 品种成分分析一直以来都是数据分析中的一个难题。blupADC 为用户提供了genotype_data_check 函数，使得用户能够方便的解决这个问题。此外，用户还可以用这个函数进行基因型数据的重复性检测。\n\r示例\r品种成分分析\rlibrary(blupADC)\rcheck_result=genotype_data_check(\rinput_data_hmp=PCA_data_hmp, #provided hapmap data object\rduplication_check=FALSE, #whether check the duplication of genotype\rbreed_check=TRUE, # whether check the record of breed\rbreed_record=PCA_Breed, # provided breed record\rreturn_result=TRUE #return result )\r\r重复性检测\rlibrary(blupADC)\rcheck_result=genotype_data_check(\rinput_data_hmp=data_hmp, #provided hapmap data object\rduplication_threshold=0.95, #threshold of duplication\rduplication_check=TRUE, #whether check the duplication of genotype\rbreed_check=FALSE, # whether check the record of breed\rreturn_result=TRUE #return result )\r\r\r输出\r## Start numeric(0,1,2) format conversion......\r## Start numeric(0,1,2) format conversion...... ## Before filter, there are 304 individuals, after filter, there are 296 individuals ## Finally, there are total 296 individuals in your data!\r输出的结果主要包括以下两个部分，如下：\n\rduplicated_genotype\r\r\r\rIND1\rIND1\r1\r\rIND2\rIND2\r1\r\rIND3\rIND3\r1\r\rIND4\rIND4\r1\r\r\r\r第一列和第二列为个体名称，第三列为重复的比例\n\rpca_outlier\r\r\r\rId\rBreed\rExpeced_Breed\r\r\r\rIND100\rLL\rYY\r\rIND233\rDD\rYY\r\rIND91\rLL\rYY\r\rIND92\rLL\rYY\r\rIND93\rLL\rYY\r\rIND94\rLL\rYY\r\r\r\r图A是进行品种分析前的品种记录，图B是进行品种分析后(可以理解为对错误的品种记录数据进行纠正)的品种记录\nPCA_blupADC\n\r\r参数\rgenotype_data_check 函数中的许多参数均与 genotype_data_format_conversion 函数中一致。故此，接下来我们将主要介绍 genotype_data_check 函数中独有的参数see more details).\n\r1：selected_snps\r\r进行基因型数据重复性检测时，所选用的SNP数目， numeric 类型. 默认 为 1000.\n\r2：overlap_threshold\r\r判定两个个体为重复的阈值, numeric 类型. 默认 为 0.95.\n\r3：duplication_check\r\r是否进行基因型数据重复性检测, logical 类型. 默认为 TRUE.\n\r4：breed_check\r\r是否进行品种分析, logical 类型. 默认为 FALSE.\n\r5：ind_breed\r\r个体的品种记录数据，data.frame 类型.\nind_breed 数据格式如下所示:\n\r\rId\rBreed\r\r\r\rIND1\rYY\r\rIND2\rYY\r\rIND3\rYY\r\rIND4\rYY\r\rIND5\rYY\r\rIND6\rYY\r\r\r\r\r","date":1618531200,"expirydate":-62135596800,"kind":"page","lang":"zh","lastmod":1618470690,"objectID":"2dc0f741f90676f30fc6ee7bab6de4ca","permalink":"/zh/post/feature-3-overlap_pca/blupadc/","publishdate":"2021-04-16T00:00:00Z","relpermalink":"/zh/post/feature-3-overlap_pca/blupadc/","section":"post","summary":"Breed composition analysis ","tags":[],"title":"R package:blupADC-功能3","type":"post"},{"authors":[],"categories":["Imputaion","QC"],"content":"目录  简介 示例 参数详解  💙基础参数 💜进阶参数      简介 🤖通常来讲，我们公司拿到的原始芯片数据大都是包含缺失值且未经过质控的。而在实际的数据分析中，我们一般都要求数据是经过质控和填充。为此，blupADC中提供了genotype_data_QC_Imputation函数，可以方便我们在R中调用Plink(用于质控)和Beagle(用于填充)软件进行基因型数据的质控和填充。\n👉 Note: 为了方便用户使用, blupADC 已经事先封装好了 Plink(用于质控) version-1.9 和 Beagle(用于填充) version-5.2 软件，用户无需再重新下载. 如果用户想自行指定软件的版本，可以通过更改相关的参数(在进阶参数部分里).\n老规矩，我们还是用一个小例子来看下函数的用法:\n示例 library(blupADC)\rgenotype_data_QC_Imputation(\rinput_data_hmp=data_hmp, #provided hapmap data object\rdata_analysis_method=\u0026quot;QC_Imputation\u0026quot;, #analysis method type,QC + imputatoin\routput_data_path=\u0026quot;/root/result\u0026quot;, #output data path\routput_data_name=\u0026quot;YY_data\u0026quot;, #output data name\routput_data_type=\u0026quot;VCF\u0026quot; #output data format )  通过上述代码，我们即可对本地的Hapmap格式的基因型数据进行质控和填充，并将其以Plink格式并保存到本地。\n进行质控和填充时，我们必须要事先提供基因型数据，这部分的参数与genotype_data_format_conversion函数中的参数用法一致。具体大家可参阅之前的介绍: 基因型数据间的格式转换。\n完成了基因型数据的提供后，我们可以通过以下参数进行质控填充的相关分析。\n参数详解 💙基础参数   参数1：data_analysis_method\n指定基因型数据的处理方法，character类型。可选方法包括：\n  \u0026ldquo;QC\u0026rdquo; :进行质控\n  \u0026ldquo;Imputation\u0026rdquo; :进行填充\n  \u0026ldquo;QC_Imputation\u0026rdquo; :先质控，后填充\n    参数2：qc_snp_rate\n  使用Plink进行质控时，SNP call rate 的阈值，numeric类型，默认为0.1。\n 参数3：qc_ind_rate  使用Plink进行质控时，IND call rate 的阈值，numeric类型，默认为0.1。\n 参数4：qc_maf  使用Plink进行质控时，MAF 的阈值，numeric类型，默认为0.05。\n 参数5：qc_hwe  使用Plink进行质控时，哈代温伯格平衡的阈值,numeric类型，默认为1e-6。\n💜进阶参数  参数6：plink_software_path  Plink软件的路径,character类型。\n 参数7：plink_software_name  Plink软件的名称,character类型。\n 参数8：beagle_software_path  Beagle软件的路径,character类型。\n 参数9：beagle_software_name  Beagle软件的名称,character类型。\n 参数10：beagle_ref_data_path  使用beagle进行填充时，提供的reference data的路径，character类型。\n 参数11：beagle_ref_data_name  使用beagle进行填充时，提供的reference data的名称，character类型。\n 参数12：beagle_ped_path  使用beagle进行填充时，提供的系谱数据的路径，character类型。\n 参数13：beagle_ped_name  使用beagle进行填充时，提供的系谱数据的名称，character类型。\n","date":1618444800,"expirydate":-62135596800,"kind":"page","lang":"zh","lastmod":1618664845,"objectID":"aa720309f26ed3c010d1cc0dd0b4148f","permalink":"/zh/post/feature-2-qc_imputation/qc_imputation/","publishdate":"2021-04-15T00:00:00Z","relpermalink":"/zh/post/feature-2-qc_imputation/qc_imputation/","section":"post","summary":"基因型数据的质控与填充","tags":[],"title":"R package:blupADC-功能2","type":"post"},{"authors":[],"categories":["格式转换"],"content":"\r\r\r简介\r示例\r输出\r参数\r\r🤡基础参数\r💨进阶参数\r\r\r\r简介\r🙀大家好,通过前一章节的学习，相信大家已经对blupADC 有了一个初步的了解了。从本节开始，我们将对blupADC中的几个重要的函数一一进行讲解。这一节主要给大家讲述的是如何使用blupADC中genotype_data_format_conversion函数来进行多种基因型格式数据的转换。\n\r示例\r首先,我们以一个简单的小例子来看看函数的用法\nlibrary(blupADC)\rsum_data=genotype_data_format_conversion(\rinput_data_hmp=data_hmp, #provided hapmap data object output_data_type=c(\u0026quot;Plink\u0026quot;,\u0026quot;BLUPF90\u0026quot;,\u0026quot;Numeric\u0026quot;),# output data format\rreturn_result = TRUE, # return result cpu_cores=1 # number of cpu )\r## Start numeric(0,1,2) format conversion...... ## Complete BLUPF90 format conversion ## Complete Plink Data Format Conversion\r下面，我们将对genotype_data_format_conversion 中的参数一一进行讲解\n\r输出\rstr(sum_data) ## List of 5\r## $ hmp :\u0026#39;data.frame\u0026#39;: 6 obs. of 311 variables:\r## ..$ rs# : chr [1:6] \u0026quot;SNP1\u0026quot; \u0026quot;SNP2\u0026quot; \u0026quot;SNP3\u0026quot; \u0026quot;SNP4\u0026quot; ...\r## ..$ alleles : logi [1:6] NA NA NA NA NA NA\r## ..$ chrom : int [1:6] 1 1 1 1 1 1\r## ..$ pos : int [1:6] 224488 293696 333333 464830 722623 838596\r## ..$ strand : logi [1:6] NA NA NA NA NA NA\r## ..$ assembly : logi [1:6] NA NA NA NA NA NA\r## ..$ center : logi [1:6] NA NA NA NA NA NA\r## ..$ protLSID : logi [1:6] NA NA NA NA NA NA\r## ..$ assayLSID: logi [1:6] NA NA NA NA NA NA\r## ..$ panelLSID: logi [1:6] NA NA NA NA NA NA\r## ..$ QCcode : logi [1:6] NA NA NA NA NA NA\r## ..$ 3098 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3498 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3297 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 2452 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 4255 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 2946 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3926 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3426 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 4213 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 2895 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 4172 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3620 : chr [1:6] \u0026quot;AA\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 4797 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 4660 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 4010 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 4095 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3029 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3930 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 4404 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 2020 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 2455 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3747 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 1590 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 2707 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 2320 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3397 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3876 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3658 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 2310 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 1996 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3000 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 2485 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 4412 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3395 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 4449 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3302 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3895 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 4328 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3892 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3764 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3922 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 4459 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 4236 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3535 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 2957 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 2927 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3499 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 4537 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 4288 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 4048 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3371 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3901 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3344 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 4745 : chr [1:6] \u0026quot;AA\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3118 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3093 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3410 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 4024 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3053 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3571 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3740 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 4374 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 4550 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3060 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3460 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3791 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3116 : chr [1:6] \u0026quot;AA\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3078 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 1974 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 1990 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3433 : chr [1:6] \u0026quot;AA\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 4349 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3340 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 2681 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 2628 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 4813 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 2221 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 2384 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 2721 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3463 : chr [1:6] \u0026quot;AA\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 2748 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 2973 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 1999 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3474 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3689 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 1924 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 1948 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 110 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## .. [list output truncated]\r## $ ped : chr [1:300, 1:18] \u0026quot;3098\u0026quot; \u0026quot;3498\u0026quot; \u0026quot;3297\u0026quot; \u0026quot;2452\u0026quot; ...\r## $ map :\u0026#39;data.frame\u0026#39;: 6 obs. of 4 variables:\r## ..$ chrom : int [1:6] 1 1 1 1 1 1\r## ..$ rs# : chr [1:6] \u0026quot;SNP1\u0026quot; \u0026quot;SNP2\u0026quot; \u0026quot;SNP3\u0026quot; \u0026quot;SNP4\u0026quot; ...\r## ..$ strand: num [1:6] 0.224 0.294 0.333 0.465 0.723 ...\r## ..$ pos : int [1:6] 224488 293696 333333 464830 722623 838596\r## $ blupf90: chr [1:300, 1:2] \u0026quot;3098 \u0026quot; \u0026quot;3498 \u0026quot; \u0026quot;3297 \u0026quot; \u0026quot;2452 \u0026quot; ...\r## ..- attr(*, \u0026quot;dimnames\u0026quot;)=List of 2\r## .. ..$ : NULL\r## .. ..$ : chr [1:2] \u0026quot;IND_name\u0026quot; \u0026quot;\u0026quot;\r## $ numeric: num [1:300, 1:6] 2 1 1 2 1 2 1 1 2 2 ...\r## ..- attr(*, \u0026quot;dimnames\u0026quot;)=List of 2\r## .. ..$ : chr [1:300] \u0026quot;3098\u0026quot; \u0026quot;3498\u0026quot; \u0026quot;3297\u0026quot; \u0026quot;2452\u0026quot; ...\r## .. ..$ : chr [1:6] \u0026quot;SNP1\u0026quot; \u0026quot;SNP2\u0026quot; \u0026quot;SNP3\u0026quot; \u0026quot;SNP4\u0026quot; ...\r我们可以清楚的看到输出结果分为5个部分(长度为5的列表)，分别为：\n\rhmp  : Hapmap 格式的基因型数据\r\r第1列为SNP，第3列为染色体，第4列为物理位置，第12列开始为基因型数据\n\r\r\rrs#\ralleles\rchrom\rpos\rstrand\rassembly\rcenter\rprotLSID\rassayLSID\rpanelLSID\rQCcode\r3098\r3498\r3297\r2452\r\r\r\rSNP1\rNA\r1\r224488\rNA\rNA\rNA\rNA\rNA\rNA\rNA\rCC\rAC\rAC\rCC\r\rSNP2\rNA\r1\r293696\rNA\rNA\rNA\rNA\rNA\rNA\rNA\rGG\rTG\rTG\rGG\r\rSNP3\rNA\r1\r333333\rNA\rNA\rNA\rNA\rNA\rNA\rNA\rGG\rTT\rTT\rGG\r\rSNP4\rNA\r1\r464830\rNA\rNA\rNA\rNA\rNA\rNA\rNA\rCC\rCC\rCC\rCC\r\rSNP5\rNA\r1\r722623\rNA\rNA\rNA\rNA\rNA\rNA\rNA\rAA\rGG\rGG\rAA\r\rSNP6\rNA\r1\r838596\rNA\rNA\rNA\rNA\rNA\rNA\rNA\rCC\rTC\rTT\rCC\r\r\r\r\rped : Plink 格式的ped数据\r\r第1列为家系，第2列为个体号，第7列开始为基因型数据。\n\r\r3098\r3098\r0\r0\r0\r0\rC\rC\rG\rG\r\r3498\r3498\r0\r0\r0\r0\rA\rC\rT\rG\r\r3297\r3297\r0\r0\r0\r0\rA\rC\rT\rG\r\r2452\r2452\r0\r0\r0\r0\rC\rC\rG\rG\r\r4255\r4255\r0\r0\r0\r0\rA\rC\rG\rG\r\r2946\r2946\r0\r0\r0\r0\rC\rC\rT\rG\r\r\r\r\rmap : Plink格式的map数据\r\r第1列为染色体，第2列为SNP，第3列为遗传距离(cM), 第4列为物理位置。\n\r\r1\rSNP1\r0.224488\r224488\r\r1\rSNP2\r0.293696\r293696\r\r1\rSNP3\r0.333333\r333333\r\r1\rSNP4\r0.464830\r464830\r\r1\rSNP5\r0.722623\r722623\r\r1\rSNP6\r0.838596\r838596\r\r\r\r\rblupf90 : BLUPF90格式的基因型数据\r\r第1列为个体号，第2列为基因型。\n\r\r3098\r200000\r\r3498\r112021\r\r3297\r112022\r\r2452\r200000\r\r4255\r102011\r\r2946\r212000\r\r\r\r\rnumeric : Numeric 格式的基因型数据\r\r行名为个体，列名为SNP，0,1,2表示的是个体在某个SNP位点的基因型数据\n\r\r\rSNP1\rSNP2\rSNP3\rSNP4\rSNP5\rSNP6\r\r\r\r3098\r2\r0\r0\r0\r0\r0\r\r3498\r1\r1\r2\r0\r2\r1\r\r3297\r1\r1\r2\r0\r2\r2\r\r2452\r2\r0\r0\r0\r0\r0\r\r4255\r1\r0\r2\r0\r1\r1\r\r2946\r2\r1\r2\r0\r0\r0\r\r\r\r\r参数\r🤡基础参数\r\r参数1:input_data_plink_ped\r\r用户提供的 Plink-ped格式的数据，data.frame类型。具体格式见结果部分\n\r参数2:input_data_plink_map\r\r用户提供的 Plink-map格式的数据，data.frame类型。具体格式见结果部分\n\r参数3:input_data_hmp\r\r用户提供的 Hapmap格式的数据，data.frame类型。具体格式见结果部分\n\r参数4:input_data_blupf90\r\r用户提供的 BLUPF90格式数据，data.frame类型。具体格式见结果部分\n\r参数5:input_data_numeric\r\r用户提供的 Numeric格式的数据，matrix(纯数字)类型。具体格式见结果部分\n此外，为了方便用户使用，用户还可以直接通过提供本地数据的路径、名称与数据类型即可完成数据提供这一步骤,而无需将数据读入到R里面。\n\r参数6:input_data_path\r\r用户提供的本地数据的文件路径，character类型。\n\r参数7:input_data_name\r\r用户提供的本地数据的文件名称，character类型。\nNote: 如果提供的数据类型为Plink ,那么本地文件名称不需要带后缀，eg. 本地文件名为test1.map test1.ped，我们提供文件名称为： input_data_name=\"test1\"。除了Plink格式的数据外，其他数据格式必须提供完整的名称(带后缀)。\n\r参数8:input_data_type\n用户提供的本地数据的格式，character类型。数据格式包括：\n\rHapmap\rPlink\rBLUPF90\rNumeric\rVCF\r\r参数9:return_result\n\r\r是否在R中返回输出的结果，logical类型。默认为FLASE。\n此外，为了便于输出数据的保存，用户可以将数据保存到本地\n\r参数10:output_data_path\r\r输出的基因型数据保存到本地的路径，character类型。\n\r参数11:output_data_name\r\r输出的基因型数据保存到本地的文件名称，character类型。\n\r参数12:output_data_type\n用户提供的本地数据的格式，character类型。数据格式包括：\n\rHapmap\rPlink\rBLUPF90\rNumeric\rVCF\r\r\r可选择同时输出多种数据格式。e.g.output_data_type=c(\"Hapmap\",\"Plink\",\"BLUPF90\",\"Numeric\") 可同时输出以上4种数据类型。\n\r💨进阶参数\r\r参数13:cpu_cores\r\r函数调用的cpu个数，numeric类型。默认调用1个\n\r参数14:miss_base\r\r缺失值在原基因型数据中所表示的的字符，character类型。默认为“NN”。\n\r参数15:miss_base_num\r\r数字化格式转换中缺失值转换成的数字，numeric类型。默认为 5。\n\r参数16:plink_software_path\r\rPlink软件的路径，character类型。涉及到VCF格式转换时，需要使用 Plink软件。当Plink软件的路径已加入到环境变量后，此项参数不需要再设置。\n\r参数17:plink_software_name\r\rPlink软件的名称，character类型。涉及到VCF格式转换时，需要使用 Plink软件。软件默认名称为：plink。\n\r参数18:vcftools_software_path\r\rvcftools软件的路径，character类型。涉及到VCF格式转换时，需要使用vcftools软件。当vcftools软件的路径已加入到环境变量后，此项参数不需要再设置。\n\r参数19:vcftools_software_name\r\rvcftools软件的名称，character类型。涉及到VCF格式转换时，需要使用 vcftools软件。软件默认名称为：vcftools。\n\r\r","date":1618358400,"expirydate":-62135596800,"kind":"page","lang":"zh","lastmod":1618383581,"objectID":"b107928fdee05958ff3b5aa1f0ccc19d","permalink":"/zh/post/blupadc/","publishdate":"2021-04-14T00:00:00Z","relpermalink":"/zh/post/blupadc/","section":"post","summary":"基因型数据格式转换","tags":[],"title":"R package:blupADC- 功能1","type":"post"},{"authors":[],"categories":["blupADC"],"content":"目录  简介 新添加的功能  1.0.3 1.0.4   开始  🙊安装 🙊功能   使用        简介 blupADC 是一个专注于分析动植物育种中的系谱数据、基因型数据及遗传评估的工具。在设计该工具时，我们对数据处理时可能遇到的各种问题均进行了详细的考量(ps.如果您有好的建议，请积极联系作者!)。此外，为了提高分析效率， blupADC 可支持并行计算(通过openMP )，并且blupADC 中的核心函数均通过c++(Rcpp and RcppArmadillo ) 进行编写。\nblupADC提供了许多有用的功能在整个动植物育种的流程中，包括 系谱分析(系谱追溯、重命名及纠错)，基因型数据格式转换(支持Hapmap, Plink, BLUPF90, Numeric 及VCF 格式)，基因型数据的质控填充，亲缘关系矩阵的构建(系谱，基因组及一步法亲缘关系矩阵)以及遗传评估（仅需几行代码即可通过DMU和BLUPF90完成遗传评估）。\n最后，为了方进一步方便用户的使用(尤其是编程基础弱的用户)，我们创建了一个免费的在线网站(shinyapp)。相关的功能仍在开发中。但是，网站的一个缺点就是，不能处理大数据，请大家合理选择！\n😊 祝好运 !\n新添加的功能 1.0.3  目前能够通过DMU自动分析 母性效应，永久环境效应，随机回归效应 及 社会遗传效应的模型 (2021.8.24)  1.0.4  支持单倍型格式转换，单倍型-数字矩阵及单倍型加性亲缘关系矩阵的构建(2021.10.8) 引入bigmemory对象支持大数据分析(2021.10.8)  开始 🙊安装 安装blupADC 之前，用户首先需要安装如下3个包：Rcpp, RcppArmadillo and data.table.\ninstall.packages(c(\u0026quot;Rcpp\u0026quot;, \u0026quot;RcppArmadillo\u0026quot;,\u0026quot;data.table\u0026quot;,\u0026quot;bigmemory\u0026quot;))\r 👉 Note: 在 DMU 和 BLUPF90的分析中，我们通常需要提前下载好 DMU 软件 (DMU下载网站) 和 BLUPF90软件 (BLUPF90下载网站)。为了方便用户使用，我们已经将两款软件中基础模块封装进了 blupADC，请大家合理使用。\n如果您想将DMU和BLUPF90用作商业用途，请务必联系 DMU 和 BLUPF90的作者！！！\n在 Linux 上 安装 blupADC packageurl \u0026lt;- \u0026quot;https://github.com/TXiang-lab/blupADC/releases/download/V1.0.3/blupADC_1.0.3_R_x86_64-pc-linux-gnu.tar.gz\u0026quot;\rinstall.packages(packageurl,repos=NULL,method=\u0026quot;libcurl\u0026quot;)\r 在 Windows 上 安装 blupADC packageurl \u0026lt;- \u0026quot;https://github.com/TXiang-lab/blupADC/releases/download/V1.0.3/blupADC_1.0.3.zip\u0026quot;\rinstall.packages(packageurl,repos=NULL)\r 👉 **Note:**针对github连接比较慢的地区，用户可以通过如下代码进行下载(国内用户推荐如下方式下载)：\n在 Linux 上 安装 blupADC packageurl \u0026lt;-\u0026quot;https://gitee.com/qsmei/blupADC/attach_files/828771/download/blupADC_1.0.3_R_x86_64-pc-linux-gnu.tar.gz\u0026quot;\rinstall.packages(packageurl,repos=NULL,method=\u0026quot;libcurl\u0026quot;)\r 在 Windows 上 安装 blupADC packageurl \u0026lt;- \u0026quot;https://gitee.com/qsmei/blupADC/attach_files/828770/download/blupADC_1.0.3.zip\u0026quot;\rinstall.packages(packageurl,repos=NULL)\r 安装成功后，我们输入如下代码即可加载R包:\nlibrary(blupADC)\r 🙊功能  功能 1. 基因型数据间的格式转换 功能 2. 基因型数据的质控与填充 功能 3. 品种分析及基因型数据重复性检测 功能 4. 系谱追溯、重命名及纠错 功能 5. 系谱可视化 功能 6. 亲缘关系矩阵的构建(A,G, H) 功能 7. 利用DMU软件进行遗传评估 功能 8. 利用BLUPF90软件进行遗传评估  使用 为了方便用户使用，所有的文档均支持双语模式(中英文说明书)。\nblupADC 内置了几个数据集对象, 包括 data_hmp 及origin_pedigree.\n此外，blupADC 提供一些示例文件， 这些文件存储在~/blupADC/extdata 路径下。通过输出下面的代码，我们就能得到 这些文件的绝对路径了：\nsystem.file(\u0026quot;extdata\u0026quot;, package = \u0026quot;blupADC\u0026quot;) # path of provided files\r 功能 1. 基因型数据间的格式转换 (see more details) library(blupADC)\rformat_result=geno_format(\rinput_data_hmp=example_data_hmp, # provided data variable\routput_data_type=c(\u0026quot;Plink\u0026quot;,\u0026quot;BLUPF90\u0026quot;,\u0026quot;Numeric\u0026quot;),# output data format\routput_data_path=getwd(), #output data path output_data_name=\u0026quot;blupADC\u0026quot;, #output data name return_result = TRUE, #save result in R environment\rcpu_cores=1 # number of cpu )\r#convert phased VCF data to haplotype format and haplotype-based numeric format\rlibrary(blupADC)\rdata_path=system.file(\u0026quot;extdata\u0026quot;, package = \u0026quot;blupADC\u0026quot;) # path of example files phased=geno_format(\rinput_data_path=data_path, # input data path input_data_name=\u0026quot;example.vcf\u0026quot;, # input data name\rinput_data_type=\u0026quot;VCF\u0026quot;, # input data type\rphased_genotype=TRUE, # whether the vcf data has been phased\rhaplotype_window_nSNP=5, # according to nSNP define haplotype-block,\rbigmemory_cal=TRUE, # format conversion via bigmemory object\rbigmemory_data_path=getwd(), # path of bigmemory data bigmemory_data_name=\u0026quot;test_blupADC\u0026quot;, #name of bigmemory data output_data_type=c(\u0026quot;Haplotype\u0026quot;,\u0026quot;Numeric\u0026quot;),# output data format\rreturn_result=TRUE, #save result in R environment\rcpu_cores=1 # number of cpu )\r 功能 2. 基因型数据的质控与填充 (see more details) library(blupADC)\rgeno_qc_impute(\rinput_data_hmp=example_data_hmp, #provided data variable\rdata_analysis_method=\u0026quot;QC_Imputation\u0026quot;, #analysis method type,QC + imputatoin\routput_data_path=getwd(), #output data path\routput_data_name=\u0026quot;YY_data\u0026quot;, #output data name\routput_data_type=\u0026quot;VCF\u0026quot; #output data format )  功能 3. 品种分析及基因型数据重复性检测 (see more details) library(blupADC)\rcheck_result=geno_check(\rinput_data_hmp=example_PCA_data_hmp, #provided hapmap data object\rduplication_check=FALSE, #whether check the duplication of genotype\rbreed_check=TRUE, # whether check the record of breed\rbreed_record=example_PCA_Breed, # provided breed record\routput_data_path=getwd(), #output path\rreturn_result=TRUE #save result as a R environment variable\r)\r 功能 4. 系谱追溯、重命名及纠错 (see more details) library(blupADC)\rpedigree_result=trace_pedigree(\rinput_pedigree=example_ped1, #provided pedigree data variable\rtrace_generation=3, # trace generation\routput_pedigree_tree=T # output pedigree tree\r)  功能 5. 系谱可视化 (see more details) library(blupADC)\rplot=ggped(\rinput_pedigree=example_ped2,\rtrace_id=c(\u0026quot;121\u0026quot;),\rtrace_sibs=TRUE #whether plot the sibs of subset-id )  功能 6. 亲缘关系矩阵的构建(A,G, H) (see more details) library(blupADC)\rdata_path=system.file(\u0026quot;extdata\u0026quot;, package = \u0026quot;blupADC\u0026quot;) # path of example files kinship_result=cal_kinship(\rinput_data_path=data_path, #provided hapmap data object\rinput_data_name=\u0026quot;example\u0026quot;,\rinput_data_type=\u0026quot;Plink\u0026quot;,\rkinship_type=c(\u0026quot;G_A\u0026quot;,\u0026quot;G_D\u0026quot;), #type of kinship matrix\rdominance_type=c(\u0026quot;genotypic\u0026quot;), #type of dominance effect\rinbred_type=c(\u0026quot;Homozygous\u0026quot;), #type of inbreeding coefficients\rreturn_result=TRUE) #save result as a R environment variable #return result  功能 7. 利用DMU软件进行遗传评估 (see more details) library(blupADC)\rdata_path=system.file(\u0026quot;extdata\u0026quot;, package = \u0026quot;blupADC\u0026quot;) # path of example files run_DMU(\rphe_col_names=c(\u0026quot;Id\u0026quot;,\u0026quot;Mean\u0026quot;,\u0026quot;Sex\u0026quot;,\u0026quot;Herd_Year_Season\u0026quot;,\u0026quot;Litter\u0026quot;,\u0026quot;Trait1\u0026quot;,\u0026quot;Trait2\u0026quot;,\u0026quot;Age\u0026quot;), # colnames of phenotype target_trait_name=list(c(\u0026quot;Trait1\u0026quot;)), #trait name fixed_effect_name=list(c(\u0026quot;Sex\u0026quot;,\u0026quot;Herd_Year_Season\u0026quot;)), #fixed effect name\rrandom_effect_name=list(c(\u0026quot;Id\u0026quot;,\u0026quot;Litter\u0026quot;)), #random effect name\rcovariate_effect_name=NULL, #covariate effect name\rphe_path=data_path, #path of phenotype file\rphe_name=\u0026quot;phenotype.txt\u0026quot;, #name of phenotype file\rinteger_n=5, #number of integer variable analysis_model=\u0026quot;PBLUP_A\u0026quot;, #model of genetic evaluation\rdmu_module=\u0026quot;dmuai\u0026quot;, #modeule of estimating variance components relationship_path=data_path, #path of relationship file relationship_name=\u0026quot;pedigree.txt\u0026quot;, #name of relationship file output_result_path=getwd() # output path )\r 功能 8. 利用BLUPF90软件进行遗传评估 (see more details) library(blupADC)\rdata_path=system.file(\u0026quot;extdata\u0026quot;, package = \u0026quot;blupADC\u0026quot;) # path of example files run_BLUPF90(\rphe_col_names=c(\u0026quot;Id\u0026quot;,\u0026quot;Mean\u0026quot;,\u0026quot;Sex\u0026quot;,\u0026quot;Herd_Year_Season\u0026quot;,\u0026quot;Litter\u0026quot;,\u0026quot;Trait1\u0026quot;,\u0026quot;Trait2\u0026quot;,\u0026quot;Age\u0026quot;), # colnames of phenotype target_trait_name=list(c(\u0026quot;Trait1\u0026quot;)), #trait name fixed_effect_name=list(c(\u0026quot;Sex\u0026quot;,\u0026quot;Herd_Year_Season\u0026quot;)), #fixed effect name\rrandom_effect_name=list(c(\u0026quot;Id\u0026quot;,\u0026quot;Litter\u0026quot;)), #random effect name\rcovariate_effect_name=NULL, #covariate effect name\rphe_path=data_path, #path of phenotype file\rphe_name=\u0026quot;phenotype.txt\u0026quot;, #name of phenotype file\ranalysis_model=\u0026quot;PBLUP_A\u0026quot;, #model of genetic evaluation\rrelationship_path=data_path, #path of relationship file relationship_name=\u0026quot;pedigree.txt\u0026quot;, #name of relationship file output_result_path=getwd() # output path )  ","date":1618272000,"expirydate":-62135596800,"kind":"page","lang":"zh","lastmod":1618324356,"objectID":"797828734720c63d3bac747eef5c9b10","permalink":"/zh/post/feature-0-overview/overview/","publishdate":"2021-04-13T00:00:00Z","relpermalink":"/zh/post/feature-0-overview/overview/","section":"post","summary":"简介","tags":[],"title":"R package:blupADC-简介","type":"post"},{"authors":["梅全顺"],"categories":null,"content":" Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including code, math, and images.\n","date":1554595200,"expirydate":-62135596800,"kind":"page","lang":"zh","lastmod":1554595200,"objectID":"557dc08fd4b672a0c08e0a8cf0c9ff7d","permalink":"/zh/publication/preprint/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/zh/publication/preprint/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example preprint / working paper","type":"publication"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\n Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)   Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three \n A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/media/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}   Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }   Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"zh","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"/zh/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/zh/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":null,"categories":null,"content":"","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"zh","lastmod":1461715200,"objectID":"d1311ddf745551c9e117aa4bb7e28516","permalink":"/zh/project/external-project/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/zh/project/external-project/","section":"project","summary":"An example of linking directly to an external project website using `external_link`.","tags":["Demo"],"title":"External Project","type":"project"},{"authors":null,"categories":null,"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"zh","lastmod":1461715200,"objectID":"8f66d660a9a2edc2d08e68cc30f701f7","permalink":"/zh/project/internal-project/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/zh/project/internal-project/","section":"project","summary":"An example of using the in-built project page.","tags":["Deep Learning"],"title":"Internal Project","type":"project"},{"authors":["梅全顺","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including code, math, and images.\n","date":1441065600,"expirydate":-62135596800,"kind":"page","lang":"zh","lastmod":1441065600,"objectID":"966884cc0d8ac9e31fab966c4534e973","permalink":"/zh/publication/journal-article/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/zh/publication/journal-article/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example journal article","type":"publication"},{"authors":["梅全顺","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including code, math, and images.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"zh","lastmod":1372636800,"objectID":"69425fb10d4db090cfbd46854715582c","permalink":"/zh/publication/conference-paper/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/zh/publication/conference-paper/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example conference paper","type":"publication"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"zh","lastmod":-62135596800,"objectID":"f26b5133c34eec1aa0a09390a36c2ade","permalink":"/zh/admin/config.yml","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/zh/admin/config.yml","section":"","summary":"","tags":null,"title":"","type":"wowchemycms"}]