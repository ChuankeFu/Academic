[{"authors":null,"categories":null,"content":"I am a PhD student in animal breeding at Huazhong Agricultural University. My research interests include genomic selection and machine learning in animal breeding. I\u0026rsquo;m familiar with several programing languages: Python, R and Rcpp(C++).\n","date":1554595200,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1554595200,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"/author/mei-quanshun/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/mei-quanshun/","section":"authors","summary":"I am a PhD student in animal breeding at Huazhong Agricultural University. My research interests include genomic selection and machine learning in animal breeding. I\u0026rsquo;m familiar with several programing languages: Python, R and Rcpp(C++).","tags":null,"title":"Mei Quanshun","type":"authors"},{"authors":null,"categories":null,"content":"   Table of Contents  What you will learn Program overview Courses in this program Meet your instructor FAQs    What you will learn  Fundamental Python programming skills Statistical concepts and how to apply them in practice Gain experience with the Scikit, including data visualization with Plotly and data wrangling with Pandas  Program overview The demand for skilled data science practitioners is rapidly growing. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi.\nCourses in this program  Python basics Build a foundation in Python.   Visualization Learn how to visualize data with Plotly.   Statistics Introduction to statistics for data science.   Meet your instructor Mei Quanshun FAQs Are there prerequisites? There are no prerequisites for the first course.\n How often do the courses run? Continuously, at your own pace.\n  Begin the course   ","date":1611446400,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1611446400,"objectID":"59c3ce8e202293146a8a934d37a4070b","permalink":"/courses/example/","publishdate":"2021-01-24T00:00:00Z","relpermalink":"/courses/example/","section":"courses","summary":"An example of using Wowchemy's Book layout for publishing online courses.","tags":null,"title":"📊 Learn Data Science","type":"book"},{"authors":null,"categories":null,"content":"Build a foundation in Python.\n  1-2 hours per week, for 8 weeks\nLearn   Quiz What is the difference between lists and tuples? Lists\n Lists are mutable - they can be changed Slower than tuples Syntax: a_list = [1, 2.0, 'Hello world']  Tuples\n Tuples are immutable - they can\u0026rsquo;t be changed Tuples are faster than lists Syntax: a_tuple = (1, 2.0, 'Hello world')   Is Python case-sensitive? Yes\n","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1609459200,"objectID":"17a31b92253d299002593b7491eedeea","permalink":"/courses/example/python/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/courses/example/python/","section":"courses","summary":"Build a foundation in Python.\n","tags":null,"title":"Python basics","type":"book"},{"authors":null,"categories":null,"content":"Learn how to visualize data with Plotly.\n  1-2 hours per week, for 8 weeks\nLearn   Quiz When is a heatmap useful? Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n Write Plotly code to render a bar chart import plotly.express as px data_canada = px.data.gapminder().query(\u0026quot;country == 'Canada'\u0026quot;) fig = px.bar(data_canada, x='year', y='pop') fig.show()  ","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1609459200,"objectID":"1b341b3479c8c6b1f807553b77e21b7c","permalink":"/courses/example/visualization/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/courses/example/visualization/","section":"courses","summary":"Learn how to visualize data with Plotly.\n","tags":null,"title":"Visualization","type":"book"},{"authors":null,"categories":null,"content":"Introduction to statistics for data science.\n  1-2 hours per week, for 8 weeks\nLearn The general form of the normal probability density function is:\n$$ f(x) = \\frac{1}{\\sigma \\sqrt{2\\pi} } e^{-\\frac{1}{2}\\left(\\frac{x-\\mu}{\\sigma}\\right)^2} $$\n The parameter $\\mu$ is the mean or expectation of the distribution. $\\sigma$ is its standard deviation. The variance of the distribution is $\\sigma^{2}$.   Quiz What is the parameter $\\mu$? The parameter $\\mu$ is the mean or expectation of the distribution.\n","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1609459200,"objectID":"6f4078728d71b1b791d39f218bf2bdb1","permalink":"/courses/example/stats/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/courses/example/stats/","section":"courses","summary":"Introduction to statistics for data science.\n","tags":null,"title":"Statistics","type":"book"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Wowchemy\u0026rsquo;s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":[],"categories":["shiny","online"],"content":"\r\r🙀大家好，从本节开始，我将给大家分享 blupADC-online (在线版)的使用说明。可能有同学会问：既然已经有了blupADC 这个package了，那么为什么还要开发blupADC-online 呢？\n其实，blupADC-online可以看成是blupADC package的简化版。凡是blupADC-online 能实现的功能， blupADCpackage均能实现。但是，考虑到部分用户可能对R不太了解，因此我们想到了开发blupADC-online 。通过blupADC-online ，用户即使没有编程基础也能很快的完成相应的分析💯。\n本节，我们给大家带来的是如何通过blupADC-online 完成DMU相关的分析。\n✋登录\r在浏览器栏直接输入网址: http://47.95.251.15:443/sample-apps/blupADC/ 即可登录到blupADC-online主界面，如下所示：\n首先我们在菜单栏点击DMU图标，即可发现有三个子菜单，从上到下依次是：\nDIR、SOL 和 Run DMU。本节的重点就是介绍这三个子菜单界面。\n如果大家事先已经了解过run_DMU 函数的话，那么本节内容可能对大家来说就比较熟悉了。如果没有事先了解也没关系，因为相关的操作还是非常简单的。\n\r✋DIR界面\r点击DIR菜单，我们就能进入 DIR界面。DIR界面的主要功能是生成 DMU格式的参数文件。下面我们来对界面内的各个参数进行逐一讲解：\nBasic information\r\rNumber of trait: 要分析的性状的数目\rNumber of integer variable: 表型数据中，整型变量的个数\rName of genetic effect: 遗传效应的名称(一般为动植物个体Id)\rUpload colnames of phenotype data: 上传表型数据的列名文件。文件格式如下所示：\r\rNote: 列名文件的格式为：n行1列。每行代表的是表型数据的列名。\n\rFile path and name\r\rRelationship file path: 亲缘关系文件的路径\n\rRelationship file name: 亲缘关系文件的名称。\n针对不同的Analysis model，我们需要提供不同的亲缘关系文件。具体对应关系为：\n\rPBLUP_A: 亲缘关系文件为系谱文件\rGBLUP_A: 亲缘关系文件为基因组亲缘关系矩阵的逆矩阵文件\rGBLUP_AD: 亲缘关系文件为基因组亲缘关系矩阵的逆矩阵文件\rSSBLUP_A: 亲缘关系文件为系谱文件及基因组亲缘关系矩阵文件\r\rPhenotype file path: 表型文件的路径\n\rPhenotype file name: 表型文件的名称\n\r\r\rDMU parameter\r\rDMU module: DMU进行遗传评估时所选用的模块，默认为 dmuai 。\n\rDMU algorithm code: 方差组分估计所用的算法，默认为 1。\n\rAnalysis model: 进行遗传评估所选用的模型。可选模型包括：\n\rPBLUP_A: 系谱加性效应模型\rGBLUP_A: 基因组加性效应模型\rGBLUP_AD:基因组加性-显性效应模型\rSSBLUP_A:一步法加性效应模型\r\r\r当用户上传表型数据的列名文件后，当前界面内便会新增几个窗口，如下：\n用户可以通过设置Number of trait来调整小窗口的个数。\ne.g. 当设置Number of trait为3时，就会生成3个小窗口，如下所示：\n用户可以在窗口内输入想要分析的性状名称及对应的固定效应、随机效应和协变量效应的名称。为了方便用户输入，选择性状和效应名称时可通过下拉菜单选取，如下：\n下面以一个具体的例子进行说明：\ne.g. 想要分析的性状为：ADG ;\n固定效应包括： Sex 和 Breed;\n随机效应包括Id ;\n协变量效应包括：Age_at_off_test。\n那么我们只需要在窗口内输入对应的信息即可，如下：\n输入完相应的效应后，在界面的正下方会实时显示所生成的 dir 参数文件内容，如下所示：\n用户可以通过下方的 Download DIR按键即可将生成的 dir 文件下载到本地。\n\r\r✋SOL界面\r点击左侧的SOL子菜单，我们就能进入SOL界面。\nSOL界面的主要功能是整理DMU输出的结果，快速得到EBV、残差、校正表型和DEBV等结果。下面我们来对界面内的各个参数进行逐一讲解：\n\rNumber of trait: 要分析的性状的数目\rGenetic number in SOL file: SOL文件中，遗传效应所对应的数字代码\rName of genetic effect: 遗传效应的名称(一般为动植物个体Id)\r\rPhenotype\r\rUpload colnames of phenotype data: 上传表型数据的列名文件。\rUpload phenotype data: 上传表型数据文件\r\r\rDEBV(可选:当需要计算DEBV时，才需要上传相应的文件。)\r\rUpload pedigree file: 上传系谱数据文件\rUpload subset id: 上传需要计算DEBV的个体号数据文件\r\r\rDMU result\r\rUpload SOL file: 上传DMU输出的SOL文件\rUpload RESIDUAL file: 上传DMU输出的RESIDUAL文件\rUpload PAROUT file: 上传DMU输出的PAROUT 文件\r\r和之前的类似，当我们上传了表型数据的列名文件后，当前界面内同样会新增几个窗口，如下：\n当我们输入了对应的性状名称后，界面正下方就会以表格的形式 实时显示 个体对应的EBV, 残差，校正表型和 DEBV，如下：\n用户可以在表格内轻松的完成查询、排序等操作。\n用户可以通过下方的 Download corrected phe按键即可将校正表型文件下载到本地。\n\r\r✋Run dmu界面\r点击左侧的Run DMU子菜单，我们就能进入Run DMU 界面。\nRun DMU界面的主要功能是快速帮我们完成DMU相关的分析。其实，Run DMU界面的功能可以看成是 DIR界面和 SOL界面功能的集合体。不过，二者最重要的区别是，Run DMU界面能自动帮我们调用DMU软件并完成相应的分析。\n总结起来就是：通过Run DMU 界面，我们只需要提供相关的性状名称和表型、系谱等数据文件后，就能得到最终的个体育种值、残差、校正表型和DEBV等结果。\nRun DMU 界面内的各个参数在 DIR界面和SOL界面内都有详细讲解，这里就不再赘述了。\n完成了前期的数据准备工作后，用户只需要点击 Run DMU 按键，就能开始DMU的分析了。\n由于不同数据量的分析时间是不同的，因此需要耐心的等待。通常情况下，几分钟就能得到结果。结果如下所示：\n用户通过点击下方的 Download EBV按键即可将生成的文件保存到本地。\n\r","date":1619049600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1619104301,"objectID":"1c2e38a35338970012171a927ee72425","permalink":"/post/feature-9-shiny_blupadc/online_dmu/","publishdate":"2021-04-22T00:00:00Z","relpermalink":"/post/feature-9-shiny_blupadc/online_dmu/","section":"post","summary":"blupADC-online","tags":[],"title":"shiny-blupADC 1","type":"post"},{"authors":[],"categories":["BLUPF90"],"content":"Table of Contents  Oveview Example  Single trait model - Pedigree BLUP Single trait model - GBLUP Single trait model - Single-step BLUP Multiple traits model - Pedigree BLUP   Parameter    Oveview 👻In the previous section, we have given detailed description about the interface with DMU by run_DMU function. In this chapter, we will introduce the usage of run_BLUPF90 function.\nNote: the usage of run_BLUPF90 and run_DMU is similar. Thus, we recommend to have a look at the usage of run_DMU function.\n👉 Note: Package blupADC has encapsulated the basic module of BLUPF90 (renumf90, remlf90, airemlf90, and blupf90), if you want to use more modules, please download from websit (BLUPF90 download website).\nFor commercial use of BLUPF90, user must contact the author of BLUPF90 !!!\nExample Single trait model - Pedigree BLUP library(blupADC)\rdata_path=system.file(\u0026quot;extdata\u0026quot;, package = \u0026quot;blupADC\u0026quot;) # path of provided files run_BLUPF90(\rphe_col_names=c(\u0026quot;Id\u0026quot;,\u0026quot;Mean\u0026quot;,\u0026quot;Sex\u0026quot;,\u0026quot;Herd_Year_Season\u0026quot;,\u0026quot;Litter\u0026quot;,\u0026quot;Trait1\u0026quot;,\u0026quot;Trait2\u0026quot;,\u0026quot;Age\u0026quot;), # colnames of phenotype target_trait_name=c(\u0026quot;Trait1\u0026quot;), #trait name fixed_effect_name=list(c(\u0026quot;Sex\u0026quot;,\u0026quot;Herd_Year_Season\u0026quot;)), #fixed effect name\rrandom_effect_name=list(c(\u0026quot;Id\u0026quot;,\u0026quot;Litter\u0026quot;)), #random effect name\rcovariate_effect_name=NULL, #covariate effect name\rphe_path=data_path, #path of phenotype file\rphe_name=\u0026quot;phenotype.txt\u0026quot;, #name of phenotype file\ranalysis_model=\u0026quot;PBLUP_A\u0026quot;, #model of genetic evaluation\rrelationship_path=data_path, #path of relationship file relationship_name=\u0026quot;pedigree.txt\u0026quot;, #name of relationship file output_result_path=\u0026quot;/root\u0026quot; # output path )  Single trait model - GBLUP library(blupADC)\rdata_path=system.file(\u0026quot;extdata\u0026quot;, package = \u0026quot;blupADC\u0026quot;) # path of provided files run_BLUPF90(\rphe_col_names=c(\u0026quot;Id\u0026quot;,\u0026quot;Mean\u0026quot;,\u0026quot;Sex\u0026quot;,\u0026quot;Herd_Year_Season\u0026quot;,\u0026quot;Litter\u0026quot;,\u0026quot;Trait1\u0026quot;,\u0026quot;Trait2\u0026quot;,\u0026quot;Age\u0026quot;), # colnames of phenotype target_trait_name=c(\u0026quot;Trait1\u0026quot;), #trait name fixed_effect_name=list(c(\u0026quot;Sex\u0026quot;,\u0026quot;Herd_Year_Season\u0026quot;)), #fixed effect name\rrandom_effect_name=list(c(\u0026quot;Id\u0026quot;,\u0026quot;Litter\u0026quot;)), #random effect name\rcovariate_effect_name=NULL, #covariate effect name\rphe_path=data_path, #path of phenotype file\rphe_name=\u0026quot;phenotype.txt\u0026quot;, #name of phenotype file\ranalysis_model=\u0026quot;GBLUP_A\u0026quot;, #model of genetic evaluation\rrelationship_path=data_path, #path of relationship file relationship_name=\u0026quot;blupf90_genumeric\u0026quot;, #name of relationship file output_result_path=\u0026quot;/root\u0026quot; # output path )  Single trait model - Single-step BLUP library(blupADC)\rdata_path=system.file(\u0026quot;extdata\u0026quot;, package = \u0026quot;blupADC\u0026quot;) # path of provided files run_BLUPF90(\rphe_col_names=c(\u0026quot;Id\u0026quot;,\u0026quot;Mean\u0026quot;,\u0026quot;Sex\u0026quot;,\u0026quot;Herd_Year_Season\u0026quot;,\u0026quot;Litter\u0026quot;,\u0026quot;Trait1\u0026quot;,\u0026quot;Trait2\u0026quot;,\u0026quot;Age\u0026quot;), # colnames of phenotype target_trait_name=c(\u0026quot;Trait1\u0026quot;), #trait name fixed_effect_name=list(c(\u0026quot;Sex\u0026quot;,\u0026quot;Herd_Year_Season\u0026quot;)), #fixed effect name\rrandom_effect_name=list(c(\u0026quot;Id\u0026quot;,\u0026quot;Litter\u0026quot;)), #random effect name\rcovariate_effect_name=NULL, #covariate effect name\rphe_path=data_path, #path of phenotype file\rphe_name=\u0026quot;phenotype.txt\u0026quot;, #name of phenotype file\ranalysis_model=\u0026quot;SSBLUP_A\u0026quot;, #model of genetic evaluation\rrelationship_path=data_path, #path of relationship file relationship_name=c(\u0026quot;pedigree.txt\u0026quot;,\u0026quot;blupf90_genumeric\u0026quot;), #name of relationship file output_result_path=\u0026quot;/root\u0026quot; # output path )  Similar to run_DMU function, through modifying the two parameters: analysis_model and relationship_name , we can perform Pedigree-BLUP, GBLUP, and SSBLUP analysis(PS: blupf90_genumeric is generated through cal_kinship function，see more details about cal_kinship function).\nMultiple traits model - Pedigree BLUP The following code is about the usage of multiple traits model through BLUPF90:\nlibrary(blupADC)\rdata_path=system.file(\u0026quot;extdata\u0026quot;, package = \u0026quot;blupADC\u0026quot;) # path of provided files run_BLUPF90(\rphe_col_names=c(\u0026quot;Id\u0026quot;,\u0026quot;Mean\u0026quot;,\u0026quot;Sex\u0026quot;,\u0026quot;Herd_Year_Season\u0026quot;,\u0026quot;Litter\u0026quot;,\u0026quot;Trait1\u0026quot;,\u0026quot;Trait2\u0026quot;,\u0026quot;Age\u0026quot;), # colnames of phenotype target_trait_name=c(\u0026quot;Trait1\u0026quot;,\u0026quot;Trait2\u0026quot;), #trait name fixed_effect_name=list(c(\u0026quot;Sex\u0026quot;,\u0026quot;Herd_Year_Season\u0026quot;),c(\u0026quot;Herd_Year_Season\u0026quot;)), #fixed effect name\rrandom_effect_name=list(c(\u0026quot;Id\u0026quot;,\u0026quot;Litter\u0026quot;),c(\u0026quot;Id\u0026quot;)), #random effect name\rcovariate_effect_name=list(NULL,\u0026quot;Age\u0026quot;), #covariate effect name\rphe_path=data_path, #path of phenotype file\rphe_name=\u0026quot;phenotype.txt\u0026quot;, #name of phenotype file\ranalysis_model=\u0026quot;PBLUP_A\u0026quot;, #model of genetic evaluation\rrelationship_path=data_path, #path of relationship file relationship_name=c(\u0026quot;pedigree.txt\u0026quot;), #name of relationship file output_result_path=\u0026quot;/root\u0026quot; # output path )  Parameter Many parameters in run_BLUPF90 are the same as in run_DMU function(see more details).\n💫Thus, we will introduce specific parameters in run_BLUPF90 function.\n  1：BLUPF90_algorithm\nAlgorithm of estimating variance components, character class. Default is \u0026ldquo;EM_REML\u0026rdquo;.\n \u0026quot;AI_REML\u0026quot; \u0026quot;EM_REML\u0026quot; \u0026quot;BLUP\u0026quot; : no need to estimate variance components, solve mixed linear model directly.    2：provided_blupf90_prior_file_path\n  File path of user-provided prior file, character class.\nNote: The format of BLUPF90 prior file is different to the format of DMU prior file. In the next section, i will give a detailed introduction.\n 3：provided_blupf90_prior_file_name  File name of user-provided prior file, character class.\n 4：provided_blupf90_prior_effect_name  Effect name of user-provided prior file, character class.\n 5：BLUPf90_software_path  Path of software BLUPF90 , character class.\n","date":1618963200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1618991259,"objectID":"539a6cc626f30df5ec24577dc6f65ed3","permalink":"/post/feature-8-run_blupf90/blupf90/","publishdate":"2021-04-21T00:00:00Z","relpermalink":"/post/feature-8-run_blupf90/blupf90/","section":"post","summary":"Genetic evaluation with software BLUPF90","tags":[],"title":"R package:blupADC-Feature 8","type":"post"},{"authors":[],"categories":["DMU"],"content":"Table of Contents  Overview Example  Single trait model - Pedigree BLUP Single trait model - GBLUP Single trait model - Single-step BLUP Multiple traits model - Pedigree BLUP   Parameter  🤡Basic 👺Advanced      Overview 🤠 In the previous section, we have given detailed description about data preparation. In the following section, we will introduce genetic evaluation software in animal and plant breeding. Nowadays, in the filed of animal and plant breeding, two of the most famous breeding software are DMU and BLUPF90 ( cited over than one thousand).\nAlthough these two softwares have many advantages, these two softwares have one common pitfall: it is a little difficult to use for freshman(need to prepare parameter file). Thus, in order to overcome this pitfall, package blupADC provides run_DMU and run_BLUPF90 for interfacing DMU and BLUPF90 in an easy way.\nIn this section, we will give detail description about run_DMU function.\n👉 Note: Package blupADC has encapsulated the basic module of DMU(dmu1,dmuai, and dmu5) , more modules could be download from website(DMU download website).\nFor commercial use of DMU, user must contact the author of DMU !!!\nExample Single trait model - Pedigree BLUP library(blupADC)\rdata_path=system.file(\u0026quot;extdata\u0026quot;, package = \u0026quot;blupADC\u0026quot;) # path of provided files run_DMU(\rphe_col_names=c(\u0026quot;Id\u0026quot;,\u0026quot;Mean\u0026quot;,\u0026quot;Sex\u0026quot;,\u0026quot;Herd_Year_Season\u0026quot;,\u0026quot;Litter\u0026quot;,\u0026quot;Trait1\u0026quot;,\u0026quot;Trait2\u0026quot;,\u0026quot;Age\u0026quot;), # colnames of phenotype\rtarget_trait_name=c(\u0026quot;Trait1\u0026quot;), #trait name fixed_effect_name=list(c(\u0026quot;Sex\u0026quot;,\u0026quot;Herd_Year_Season\u0026quot;)), #fixed effect name\rrandom_effect_name=list(c(\u0026quot;Id\u0026quot;,\u0026quot;Litter\u0026quot;)), #random effect name\rcovariate_effect_name=NULL, #covariate effect name\rphe_path=data_path, #path of phenotype file\rphe_name=\u0026quot;phenotype.txt\u0026quot;, #name of phenotype file\rinteger_n=5, #number of integer variable analysis_model=\u0026quot;PBLUP_A\u0026quot;, #model of genetic evaluation\rdmu_module=\u0026quot;dmuai\u0026quot;, #modeule of estimating variance components relationship_path=data_path, #path of relationship file relationship_name=\u0026quot;pedigree.txt\u0026quot;, #name of relationship file output_result_path=\u0026quot;/root\u0026quot; # output path )\r Single trait model - GBLUP library(blupADC)\rdata_path=system.file(\u0026quot;extdata\u0026quot;, package = \u0026quot;blupADC\u0026quot;) # path of provided files run_DMU(\rphe_col_names=c(\u0026quot;Id\u0026quot;,\u0026quot;Mean\u0026quot;,\u0026quot;Sex\u0026quot;,\u0026quot;Herd_Year_Season\u0026quot;,\u0026quot;Litter\u0026quot;,\u0026quot;Trait1\u0026quot;,\u0026quot;Trait2\u0026quot;,\u0026quot;Age\u0026quot;), # colnames of phenotype target_trait_name=c(\u0026quot;Trait1\u0026quot;), #trait name fixed_effect_name=list(c(\u0026quot;Sex\u0026quot;,\u0026quot;Herd_Year_Season\u0026quot;)), #fixed effect name\rrandom_effect_name=list(c(\u0026quot;Id\u0026quot;,\u0026quot;Litter\u0026quot;)), #random effect name\rcovariate_effect_name=NULL, #covariate effect name\rphe_path=data_path, #path of phenotype file\rphe_name=\u0026quot;phenotype.txt\u0026quot;, #name of phenotype file\rinteger_n=5, #number of integer variable analysis_model=\u0026quot;GBLUP_A\u0026quot;, #model of genetic evaluation\rdmu_module=\u0026quot;dmuai\u0026quot;, #modeule of estimating variance components relationship_path=data_path, #path of relationship file relationship_name=\u0026quot;G_Ainv_col_three.txt\u0026quot;, #name of relationship file output_result_path=\u0026quot;/root\u0026quot; # output path )\r Single trait model - Single-step BLUP library(blupADC)\rdata_path=system.file(\u0026quot;extdata\u0026quot;, package = \u0026quot;blupADC\u0026quot;) # path of provided files run_DMU(\rphe_col_names=c(\u0026quot;Id\u0026quot;,\u0026quot;Mean\u0026quot;,\u0026quot;Sex\u0026quot;,\u0026quot;Herd_Year_Season\u0026quot;,\u0026quot;Litter\u0026quot;,\u0026quot;Trait1\u0026quot;,\u0026quot;Trait2\u0026quot;), # colnames of phenotype target_trait_name=c(\u0026quot;Trait1\u0026quot;), #trait name fixed_effect_name=list(c(\u0026quot;Sex\u0026quot;,\u0026quot;Herd_Year_Season\u0026quot;)), #fixed effect name\rrandom_effect_name=list(c(\u0026quot;Id\u0026quot;,\u0026quot;Litter\u0026quot;)), #random effect name\rcovariate_effect_name=NULL, #covariate effect name\rphe_path=data_path, #path of phenotype file\rphe_name=\u0026quot;phenotype.txt\u0026quot;, #name of phenotype file\rinteger_n=5, #number of integer variable analysis_model=\u0026quot;SSBLUP_A\u0026quot;, #model of genetic evaluation\rdmu_module=\u0026quot;dmuai\u0026quot;, #modeule of estimating variance components relationship_path=data_path, #path of relationship file relationship_name=c(\u0026quot;pedigree.txt\u0026quot;,\u0026quot;G_A_col_three.txt\u0026quot;), #name of relationship file output_result_path=\u0026quot;/root\u0026quot; # output path )\r Through modifying the two parameters: analysis_model and relationship_name , we can perform Pedigree-BLUP, GBLUP, and SSBLUP analysis (PS: we can get G_Ainv_col_three.txt and G_A_col_three.txt by cal_kinship function，see more details about cal_kinship function).\nThe above example is single-trait model, while in actual breeding, multiple traits model is also common. Similarly, we only need to modify several parameters to perform multiple traits model:\nMultiple traits model - Pedigree BLUP library(blupADC)\rdata_path=system.file(\u0026quot;extdata\u0026quot;, package = \u0026quot;blupADC\u0026quot;) # path of provided files run_DMU(\rphe_col_names=c(\u0026quot;Id\u0026quot;,\u0026quot;Mean\u0026quot;,\u0026quot;Sex\u0026quot;,\u0026quot;Herd_Year_Season\u0026quot;,\u0026quot;Litter\u0026quot;,\u0026quot;Trait1\u0026quot;,\u0026quot;Trait2\u0026quot;,\u0026quot;Age\u0026quot;), # colnames of phenotype target_trait_name=c(\u0026quot;Trait1\u0026quot;,\u0026quot;Trait2\u0026quot;), #trait name fixed_effect_name=list(c(\u0026quot;Sex\u0026quot;,\u0026quot;Herd_Year_Season\u0026quot;),c(\u0026quot;Herd_Year_Season\u0026quot;)), #fixed effect name\rrandom_effect_name=list(c(\u0026quot;Id\u0026quot;,\u0026quot;Litter\u0026quot;),c(\u0026quot;Id\u0026quot;)), #random effect name\rcovariate_effect_name=list(NULL,\u0026quot;Age\u0026quot;), #covariate effect name\rphe_path=data_path, #path of phenotype file\rphe_name=\u0026quot;phenotype.txt\u0026quot;, #name of phenotype file\rinteger_n=5, #number of integer variable analysis_model=\u0026quot;PBLUP_A\u0026quot;, #model of genetic evaluation\rdmu_module=\u0026quot;dmuai\u0026quot;, #modeule of estimating variance components relationship_path=data_path, #path of relationship file relationship_name=\u0026quot;pedigree.txt\u0026quot;, #name of relationship file output_result_path=\u0026quot;/root\u0026quot; # output path )\r Parameter 🤡Basic  1：phe_path  File path of phenotype data ，character class。\n 2：phe_name  File name of phenotype data，character class。\nNote: User-provided phenotype doesn\u0026rsquo;t have colnames (the same as the requirement of DMU)\n 3：phe_col_names  Colnames of phenotype data，character class。\n 4：integer_n  Number of integer variable, numeric class。\n 5：genetic_effect_name  Genetic effect name (usually is the individual name), character class.\n 6：target_trait_name  Target trait name, character class.\nFor multiple traits model, we should set target_trait_name as character vector, e.g. target_trait_name=c(\u0026quot;Trait1\u0026quot;,\u0026quot;Trait2\u0026quot;)\n 7：fixed_effect_name  Fixed effects name, list class.\nFor multiple traits model, the order of fixed effects name should correspond to the target trait name.\neg. target_trait_name=c(\u0026quot;Trait1\u0026quot;,\u0026quot;Trait2\u0026quot;)\nfixed_effect_name=list(c(\u0026quot;Sex\u0026quot;,\u0026quot;Herd_Year_Season\u0026quot;),c(\u0026quot;Herd_Year_Season\u0026quot;))\nwhich means the fixed effects name of trait1 is : c(\u0026quot;Sex\u0026quot;,\u0026quot;Herd_Year_Season\u0026quot;), the fixed effect name of trait2 is : c(\u0026quot;Herd_Year_Season\u0026quot;) \n 8：random_effect_name  Random effects name, list class.\nFor multiple traits model, the order of random effects name should correspond to the target trait name.\neg. target_trait_name=c(\u0026quot;Trait1\u0026quot;,\u0026quot;Trait2\u0026quot;)\nrandom_effect_name=list(c(\u0026quot;Id\u0026quot;,\u0026quot;Litter\u0026quot;),c(\u0026quot;Id\u0026quot;))\nwhich means the random effects name of trait1 is : c(\u0026quot;Id\u0026quot;,\u0026quot;Litter\u0026quot;), the random effects name of trait2 is : c(\u0026quot;Id\u0026quot;)\n 9：covariate_effect_name  Covariate effects name, list class.\nFor multiple traits model, the order of covariate effects name should correspond to the target trait name.\neg. target_trait_name=c(\u0026quot;Trait1\u0026quot;,\u0026quot;Trait2\u0026quot;)\ncovariate_effect_name=list(NULL,\u0026quot;Age\u0026quot;)\nwhich means the covariate effects name of trait1 is : NULL (NULL means no this effect), the covariate effects name of trait2 is : Age\n  10：analysis_model\nModel of genetic evaluation, character class.\n \u0026quot;PBLUP_A\u0026quot; : Pedigree BLUP- additive model \u0026quot;GBLUP_A\u0026quot; :GBLUP- additive model \u0026quot;GBLUP_AD\u0026quot; :GBLUP- additive and dominance model \u0026quot;SSBLUP_A\u0026quot; :SSBLUP- additive model \u0026quot;User_define\u0026quot;: User define model    11：dmu_module\nModule of estimating variance components, character class.\n  \u0026quot;dmuai\u0026quot;\n  \u0026quot;dmu4\u0026quot;\n  \u0026quot;dmu5\u0026quot;\n    12：DMU_software_path\n  Path of DMU software, character class.\n 13：relationship_path  File path of relationship data, character class.\n 14：relationship_name  File name of relationship data, character class.\nFor different genetic evaluation model , we should provide different relationship file.\nE.g. for \u0026ldquo;PBLUP_A\u0026rdquo; model, we need to provide pedigree file, then we should set relationship_name=\u0026quot;pedigree.txt\u0026quot; ;\nfor \u0026ldquo;GBLUP_A\u0026rdquo; model, we need to provide inverse of additive relationship matrix file(3 columns format), then we should set relationship_name=\u0026quot;G_Ainv_col_three.txt\u0026quot; ;\nfor \u0026ldquo;SSBLUP_A\u0026rdquo; model, we need to provide pedigree and additive relationship matrix file(3 columns format), then we should set relationship_name=c(\u0026quot;pedigree.txt\u0026quot;,\u0026quot;G_A_col_three.txt\u0026quot;) ;\n 15：output_result_path  Path of output DMU result, character class.\n 16：output_ebv_path  File path of output EBV, character class. Default is equal to output_result_path\n 17：output_ebv_name  File name of output EBV, character class.\n👺Advanced  18：provided_effect_file_path  File path of trait\u0026rsquo;s model effect data, character class.\nFile of trait\u0026rsquo;s model effect include fixed effects name, random effects name, and covariate effects name. Once user provides this file, user don\u0026rsquo;t need to set these three parameters: fixed_effect_name  random_effect_name  covariate_effect_name .\nThe format of this effect file is as following:\n   V1 V2 V3 V4 V5 V6 V7 V8 V9     Trait1 * Sex Herd_Year_Season * Id Litter * *   Trait2 * Sex * Id * Age *     The first column is the name of target trait. Each column stands for one effect name. In order to recognize three types of effect, we set * to distinguish each type.\nEffects name between the first * and the second * stand for fixed effects name;\neffects name between the second * and the third * stand for random effects name;\neffects name between the third * and the fourth * stand for covariate effects name.\n 19：provided_effect_file_name  File name of trait\u0026rsquo;s model effect data, character class.\n 20：provided_DIR_file_path  File path of user-provided DIR data, character class.\n 21：provided_DIR_file_name  File name of user-provided DIR data, character class.\n 22：included_permanent_effect  Whether perform permanent-environment analysis, logical class. Default is FALSE.\n 23：dmu_algorithm_code  Number of dmu-module algorithm, numeric class.\n 24：provided_prior_file_path  File path of user-provided prior file, character class.\n 25：provided_prior_file_name  File name of user-provided prior file, character class.\n 26：missing_value  Missing value in phenotype file, numeric class. Default is -9999.\n 27：iteration_criteria  Value of iteration convergence, numeric class. Default is 1.0e-7.\n 28：genetic_effect_number  Number of genetic effect in SOL file, numeric class. Default is 4.\n 29：residual_cov_trait  Traits combination of assuming residual-covariance equals to 0. e.g residual_cov_trait=list(c(\u0026quot;Trait1\u0026quot;,\u0026quot;Trait2\u0026quot;))\n 30：selected_id  Individuals set of output EBV, character class.\n 31：cal_debv  Whether calculate de-regressed EBV(DEBV), logical class. Default is FALSE.\n 32：debv_pedigree_path  File path of pedigree data for calculating DEBV, character class.\n 33：debv_pedigree_name  File name of pedigree data for calculating DEBV, character class.\n","date":1618876800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1618914678,"objectID":"5814be3e29f082ce7eea6171a9d56fcb","permalink":"/post/feature-7-run_dmu/run_dmu/","publishdate":"2021-04-20T00:00:00Z","relpermalink":"/post/feature-7-run_dmu/run_dmu/","section":"post","summary":"Genetic evaluation with software DMU","tags":[],"title":"R package:blupADC-Feature 7","type":"post"},{"authors":[],"categories":["Relationship matrix"],"content":"Table of Contents  Overview Example  😾 Pedigree-based kinship matrix 🤡 Genomic-based kinship matrix 💨Single-step based kinship matrix   Parameter  💪Basic 🦶Advanced      Overview 🙉 In the application of animal and plant breeding, the key step is the construction of kinship matrix. Package: blupADC provides cal_kinship function which can construct various type of relationship matrix directly, including additive relationship matrix(pedigree, genomic and single-step), and dominance relationship matrix(pedigree, genomic and single-step), and the inverse matrix of these kinship matrix.\nIn the construction of single-step relationship matrix, users can select metafounder algorithm. In terms of the construction of dominance relationship matrix, users can select different coding manners for genomic dominance relationship matrix, gene dropping algorithm for pedigree dominance relationship matrix. In addition, cal_kinship  can calculate several types of inbreeding coefficients (pedigree, genomic, and single-step) .\nExample 😾 Pedigree-based kinship matrix library(blupADC)\rkinship_result=cal_kinship(\rinput_pedigree=origin_pedigree, #provided hapmap data object\rkinship_type=c(\u0026quot;P_A\u0026quot;), #type of kinship matrix\rinbred_type=c(\u0026quot;Pedigree\u0026quot;), #type of inbreeding coefficients\rreturn_result=TRUE) #return result  Note: In the construction of pedigree and single-step relationship matrix, people need to provide genotype data.\n🤡 Genomic-based kinship matrix library(blupADC)\rkinship_result=cal_kinship(\rinput_data_hmp=data_hmp, #provided hapmap data object\rkinship_type=c(\u0026quot;G_A\u0026quot;,\u0026quot;G_D\u0026quot;), #type of kinship matrix\rdominance_type=c(\u0026quot;genotypic\u0026quot;), #type of dominance effect\rinbred_type=c(\u0026quot;Homozygous\u0026quot;), #type of inbreeding coefficients\rreturn_result=TRUE) #return result  Note: In the construction of genomic and single-step relationship matrix, people need to provide genotype data. These parameters are the same as in genotype_data_format_conversion function((see more details).\n💨Single-step based kinship matrix library(blupADC)\rkinship_result=cal_kinship(\rinput_data_hmp=data_hmp, #provided hapmap data object\rinput_pedigree=origin_pedigree,\rkinship_type=c(\u0026quot;H_A\u0026quot;), #type of kinship matrix\rinbred_type=c(\u0026quot;H_diag\u0026quot;), #type of inbreeding coefficients\rreturn_result=TRUE) #return result  Parameter 💪Basic   1：kinship_type\nType of kinship matrix, character class. User can select multiple types simultaneously, including:\n \u0026ldquo;G_A\u0026rdquo; : genomic additive kinship matrix \u0026ldquo;G_Ainv\u0026rdquo; :inverse of genomic additive kinship matrix \u0026ldquo;G_D\u0026rdquo; :genomic dominance kinship matrix \u0026ldquo;G_Dinv\u0026rdquo; :inverse of genomic dominance kinship matrix \u0026ldquo;P_A\u0026rdquo; :pedigree additive kinship matrix \u0026ldquo;P_Ainv\u0026rdquo; :inverse of pedigree additive kinship matrix \u0026ldquo;P_D\u0026rdquo; : pedigree dominance kinship matrix \u0026ldquo;P_Dinv\u0026rdquo; :inverse of pedigree dominance kinship matrix \u0026ldquo;H_A\u0026rdquo; :single-step additive kinship matrix \u0026ldquo;H_Ainv\u0026rdquo; :inverse of single-step additive kinship matrix \u0026ldquo;H_D\u0026rdquo; :single-step dominance kinship matrix \u0026ldquo;H_Dinv\u0026rdquo; :inverse of single-step dominance kinship matrix    Note: In the construction of pedigree and single-step relationship matrix, user need to provide pedigree data. In the construction of genomic and single-step relationship matrix, user need to provide genotype data.\n  2：dominance_type\nType of dominance effect in the construction of dominance relationship matrix , character class.\n \u0026ldquo;genotypic\u0026rdquo; : coded by $0-2pq$, $1-2pq$, and $0-2pq$ for $AA$, $Aa$, and $aa$, respectively. \u0026ldquo;classical\u0026rdquo; : coded by $-2q^2$, $2pq$ , and $-2p^2$ for $AA$, $Aa$, and $aa$, respectively.     More details about these two types dominance effects could be seen in this reference ：On the Additive and Dominant Variance and Covariance of Individuals Within the Genomic Selection Scope\n   3：inbred_type\nType of inbreeding coefficients, character class.\n  \u0026ldquo;Homozygous\u0026rdquo; : proportion of homozygous sites\n  \u0026ldquo;G_Diag\u0026rdquo; : diagonal of genomic additive relationship matrix minus 1\n  \u0026ldquo;H_diag\u0026rdquo; :diagonal of single-step additive relationship matrix minus 1\n  \u0026ldquo;Pedigree\u0026rdquo; :diagonal of pedigree additive relationship matrix minus 1\n    4：input_pedigree\n  User-provided pedigree data ，data.frame or matrix class. (see more details about the format of pedigree data)\n 5：pedigree_rename  Whether pedigree need to be renamed, logical class. Default is TRUE.\n 6：IND_geno_rename  Whether genotype individuals need to be renamed according to the renamed pedigree, logical class. Default is FALSE.\n 7：rename_to_origin  Whether renamed individuals should keep original name, logical class. Default is FALSE.\n  8：output_matrix_type\nType of output kinship matrix type, character class. Default is \u0026ldquo;col_three\u0026rdquo;.\n \u0026ldquo;col_all\u0026rdquo; : n*n format \u0026ldquo;col_three\u0026rdquo; : 3 columns format. The first and the second column are the name of individuals, the third column is the relationship coefficients 。              1001 1001 0.989   1001 1002 0.421   1001 1003 0.567     9：output_matrix_path  File path of output relationship matrix, character class.\n 10：output_matrix_name  File name of output relationship matrix, character class.\n🦶Advanced  11：cpu_cores  Number of cpu in calculating, numeric class. Default is 1.\n 12：kinship_base  Whether take $p=q=0.5$ in the construction of relationship matrix, logical class. Default is FALSE.\n 13：kinship_trace  Whether take the trace of kinship matrix to scale relationship matrix, logical class. Default is FALSE.\n 14：kinship_metafounder  Whether take the metafounder algorithm to construct single-step relationship matrix, logical class. Default is FALSE.\n 15：SSBLUP_omega  The value of omega in the construction of single-step additive relationship matrix, numeric class. Default is 0.05.\n 16：gene_dropping  Whether take the gene dropping algorithm to construct pedigree dominance relationship matrix, logical class. Default is FALSE.\n 17：gene_dropping_iteration  The number of iteration for gene dropping algorithm , numeric class. Default is 1000.\n 18：memory_save  Whether take memory efficient way to construct kinship matrix, logical class. Default is FALSE. (This way need more storage space)\n","date":1618790400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1618734999,"objectID":"468e5be35eedbea18bb02ed0ab82f3b5","permalink":"/post/feature-6-kinship_matrix/relationship_matrix/","publishdate":"2021-04-19T00:00:00Z","relpermalink":"/post/feature-6-kinship_matrix/relationship_matrix/","section":"post","summary":"Construct kinship matrix(A,G and H)","tags":[],"title":"R package:blupADC-Feature 6","type":"post"},{"authors":[],"categories":["Pedigree"],"content":"Table of Contents  Overview Example  Plot whole pedigree Plot subset of whole pedigree Plot subset of whole pedigree (with sibs)   Change the style of picture Output Parameter  💥Basic 💨Advanced      Overview 🦄 An intuitive and clear structure of pedigree could help breeders to make better decision in breeding plan. By applying ggped function, user can plot the structure of pedigree in an easy way.\nExample Plot whole pedigree library(blupADC)\rpedigree_result=ggped(\rinput_pedigree=plot_pedigree\r)  Plot subset of whole pedigree library(blupADC)\rpedigree_result=ggped(\rinput_pedigree=plot_pedigree,\rtrace_id=c(\u0026quot;121\u0026quot;) #provided subset-id\r)  Plot subset of whole pedigree (with sibs) library(blupADC)\rpedigree_result=ggped(\rinput_pedigree=plot_pedigree,\rtrace_id=c(\u0026quot;121\u0026quot;),\rtrace_sibs=TRUE #whether plot the sibs of subset-id )  Change the style of picture User can change the style of pedigree by modifying the shape_type parameter. Default shape_type is 4.\nOutput The output of ggped is the object of ggplot, user can plot the pedigree structure or save it directly.\nParameter 💥Basic  1：input_pedigree  User-provided pedigree data, data.frame  or matrix class.\n💌The format of provided pedigree data should be 3 columns format:\n   Offspring Sire Dam     DD19575312 DD18768902 DD16376015   DD19513112 DD18768902 DD17111017   DD20348012 DD19132207 DD19234510   DD20361110 DD19331001 DD19293112   DD20471212 DD19331001 DD19320808   DD20564818 DD19331001 DD19311009     **2: trace_id **  Individuals set in tracing pedigree, character class. Default is NULL (plot whole individuals in pedigree)\n 3: trace_sibs  Whether tracing the sibs of individuals set , logical class. Default is FALSE .\n **4: ind_sex **  Sex record of individuals , data.frame class.\nThe format of this data is showing as follow:\n   Individual Sex     101 Male   102 Female   103 Male   104 Female    For individual who doesn\u0026rsquo;t have the record of sex, the sex of this individual would be set as Male.\n **5：plot_family **  Whether showing family structure when plotting the pedigree, logical class. Default is FALSE .\n **6：shape_type **  The shape type when plotting pedigree ，numeric class. Default is 4.\n💨Advanced  7: shape_size  The shape size of picture, numeric class. Default is 8 .\n 8：ind_text_size  The size of individual name, numeric class. Default is 4 .\n 9：ind_text_vjust  The vjust of individual name, numeric class. Default is 3 .\n","date":1618704000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1618533163,"objectID":"bc1e440dd4f54a06c26e1cc5c33f8a9a","permalink":"/post/feature-5-visualize_pedigree/pedigree/","publishdate":"2021-04-18T00:00:00Z","relpermalink":"/post/feature-5-visualize_pedigree/pedigree/","section":"post","summary":"Pedigree visualization ","tags":[],"title":"R package:blupADC-Feature 5","type":"post"},{"authors":[],"categories":["Pedigree"],"content":"Table of Contents  Overview Example  💖Trace pedigree   Output Parameter  💥Basic 💨Advanced      Overview 🦄 Pedigree is the important information in animal breeding. By applying trace_pedigree function in package: blupADC, user can trace, rename, correct pedigree errors in an easy way. In addition, user can visualize the pedigree structure by ggped function.\nExample 💖Trace pedigree library(blupADC)\rpedigree_result=trace_pedigree(\rinput_pedigree=origin_pedigree, #provided pedigree data object\routput_pedigree_tree=TRUE # output pedigree tree\r)  Output By typing str(pedigree_result), we can get the output result of this function:\nstr(pedigree_result)\r## List of 5\r## $ ped : chr [1:15945, 1:3] \u0026quot;DD19348310\u0026quot; \u0026quot;DD19386807\u0026quot; \u0026quot;DD19119705\u0026quot; \u0026quot;DD16007415\u0026quot; ...\r## ..- attr(*, \u0026quot;dimnames\u0026quot;)=List of 2\r## .. ..$ : NULL\r## .. ..$ : chr [1:3] \u0026quot;Offspring\u0026quot; \u0026quot;Sire\u0026quot; \u0026quot;Dam\u0026quot;\r## $ rename_ped :'data.frame':\t15945 obs. of 6 variables:\r## ..$ Offspring : chr [1:15945] \u0026quot;DD19348310\u0026quot; \u0026quot;DD19386807\u0026quot; \u0026quot;DD19119705\u0026quot; \u0026quot;DD16007415\u0026quot; ...\r## ..$ Generation : num [1:15945] 0 0 0 0 0 0 0 0 0 0 ...\r## ..$ Offspring_Id: int [1:15945] 1 2 3 4 5 6 7 8 9 10 ...\r## ..$ Sire_Id : num [1:15945] 0 0 0 0 0 0 0 0 0 0 ...\r## ..$ Dam_Id : num [1:15945] 0 0 0 0 0 0 0 0 0 0 ...\r## ..$ Order : int [1:15945] 1 2 3 4 5 6 7 8 9 10 ...\r## $ pedigree_tree: chr [1:15945, 1:15] \u0026quot;DD19348310\u0026quot; \u0026quot;DD19386807\u0026quot; \u0026quot;DD19119705\u0026quot; \u0026quot;DD16007415\u0026quot; ...\r## ..- attr(*, \u0026quot;dimnames\u0026quot;)=List of 2\r## .. ..$ : NULL\r## .. ..$ : chr [1:15] \u0026quot;Offspring\u0026quot; \u0026quot;Sire\u0026quot; \u0026quot;Dam\u0026quot; \u0026quot;SireSire\u0026quot; ...\r## $ error_id_set :List of 4\r## ..$ error_duplicated_id: chr [1:24] \u0026quot;DD19119705\u0026quot; \u0026quot;DD20488904\u0026quot; \u0026quot;DD20153801\u0026quot; \u0026quot;DD20376912\u0026quot; ...\r## ..$ error_sex_id: chr \u0026quot;DD13006182\u0026quot;\r## ..$ error_breed_id: NULL\r## ..$ error_birth_date_id: NULL\r Output result includes several parts:\n ped: pedigree without rename rename_ped: renamed pedigree. The first column is original id, the second column is generation, columns 3-5 stand for the renamed pedigree. pedigree_tree: pedigree tree. Pedigree tree contains ancestry records information for each individual. For saving time, software doesn\u0026rsquo;t output pedigree tree in default. error_id_set: dataset of pedigree errors .According to the type of pedigree errors, these datasets can be divided four parts:  error_duplicated_id: same individual but has different records of sire and dam error_sex_id: same individual appears in the column of sire and dam simultaneously error_breed_id: breed of parents and offspring is different (only for specify format of original id) error_birth_date_id: offspring born before its parents (need to provide birth data information in the fourth column of pedigree)    Parameter 💥Basic  1：input_pedigree  User-provided pedigree data, data.frame  or matrix class.\n💌The format of provided pedigree data should be one of the following format:\n 3 columns format:     Offspring Sire Dam     DD19575312 DD18768902 DD16376015   DD19513112 DD18768902 DD17111017   DD20348012 DD19132207 DD19234510   DD20361110 DD19331001 DD19293112   DD20471212 DD19331001 DD19320808   DD20564818 DD19331001 DD19311009     4 columns format:     Offspring Sire Dam Birth_Date     DD19575312 DD18768902 DD16376015 20200101   DD19513112 DD18768902 DD17111017 20200102   DD20348012 DD19132207 DD19234510 20200103   DD20361110 DD19331001 DD19293112 20200104   DD20471212 DD19331001 DD19320808 20200105   DD20564818 DD19331001 DD19311009 20200106     Multiple columns format:     Offspring Sire Dam SireSire DamSire SireSireSire     DD20231905 DD19581002 DD18750810 DD16785512 DD15507717 DD14008512   DD20458701 DD19564302 DD18925809 DD15349017 DD15245411 DD16771212   DD20324707 DD19232903 DD18571012 DD16794714 DD16744412 DD16714516   DD19288609 DD18713408 DD18552609 DD15180015 DD15479214 DD15243711   DD16222012 DD15145005 DD15378812 DD14110014 DD15501518 DD15206217   DD17684713 DD16672107 DD15122311 DD15505715 DD15347415 DD16383111    Note: When the format of provided pedigree data is multiple columns ，the colnames of pedigree data should be the specify format , e.g. SireSire stands for the father of offspring\u0026rsquo;s father, SirSireSire stands for the father of SireSire\nMissing record in pedigree could be set as NA or 0 .\n 2：input_pedigree_path  File path of pedigree data, character class.\n 3：input_pedigree_name  File name of pedigree data, character class.\n 4：pedigree_format_conversion  Whether convert multiple columns pedigree into standard 3 columns pedigree, logical class. Whether the format of provided pedigree data is multiple columns, user need to set pedigree_format_conversion=TRUE .\n 5：output_pedigree_path  File path of output pedigree data, character class.\n 6：output_pedigree_name  File path of output pedigree name, character class.\n💨Advanced  7：dup_error_check  Whether check the pedigree error of error_duplicated，logical class. Default is TRUE.\n 8：sex_error_check  Whether check the pedigree error of error_sex，logical class. Default is TRUE.\n 9：breed_error_check  ","date":1618617600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1618540363,"objectID":"fe2f55752ee6c514480937e584241f12","permalink":"/post/feature-4-trace_pedigree/pedigree/","publishdate":"2021-04-17T00:00:00Z","relpermalink":"/post/feature-4-trace_pedigree/pedigree/","section":"post","summary":"Pedigree analysis","tags":[],"title":"R package:blupADC-Feature 4","type":"post"},{"authors":[],"categories":["Check genotype"],"content":"\r\r\rTable of Contents  Overview\r👦 Breed composition analysis is usually a problem in data analysis. In package:blupADC, user can solve this problem by applying genotype_data_check function. In addition, user can detect the duplication of genomic data easily by applying genotype_data_check function.\n\rExample\rBreed composition analysis\rlibrary(blupADC)\rcheck_result=genotype_data_check(\rinput_data_hmp=PCA_data_hmp, #provided hapmap data object\rduplication_check=FALSE, #whether check the duplication of genotype\rbreed_check=TRUE, # whether check the record of breed\rbreed_record=PCA_Breed, # provided breed record\rreturn_result=TRUE #return result )\r\rCheck duplication\rlibrary(blupADC)\rcheck_result=genotype_data_check(\rinput_data_hmp=data_hmp, #provided hapmap data object\rduplication_threshold=0.95, #threshold of duplication\rduplication_check=TRUE, #whether check the duplication of genotype\rbreed_check=FALSE, # whether check the record of breed\rreturn_result=TRUE #return result )\r\r\rOutput\r## Start numeric(0,1,2) format conversion......\r## Start numeric(0,1,2) format conversion...... ## Before filter, there are 304 individuals, after filter, there are 296 individuals ## Finally, there are total 296 individuals in your data!\rThe result of output mainly contains two parts, including:\n\rduplicated_genotype\r\r\r\rIND1\rIND1\r1\r\rIND2\rIND2\r1\r\rIND3\rIND3\r1\r\rIND4\rIND4\r1\r\r\r\rThe first and the second column is the name of individual, the third column is the percentage of overlap.\n\rpca_outlier\r\r\r\rId\rBreed\rExpeced_Breed\r\r\r\rIND1\rYY\rDD\r\rIND100\rLL\rDD\r\rIND12\rYY\rDD\r\rIND14\rYY\rDD\r\rIND16\rYY\rDD\r\rIND18\rYY\rDD\r\r\r\rFigure A is the PCA result before correcting breed record , Figure B is the PCA result after correcting breed correcting record\nPCA_blupADC\n\r\rParameter\rMany parameters in genotype_data_overlap are the same as in genotype_data_format_conversion function (see more details).\nThus, we will introduce specific parameters in genotype_data_overlap function.\n\r1：selected_snps\r\rNumber of SNPs in detecting overlap, numeric class. Default is 1000.\n\r2：overlap_threshold\r\rThreshold of duplicate genotype, numeric class. Default is 0.95.\n\r3：duplication_check\r\rWhether check duplication of genotype, logical class. Default is TRUE.\n\r4：breed_check\r\rWhether check breed record of genotype, logical class. Default is FALSE.\n\r5：ind_breed\r\rBreed record of individuals, data.frame class.\nThe format of ind_breed is showing as follow:\n\r\rId\rBreed\r\r\r\rIND1\rYY\r\rIND2\rYY\r\rIND3\rYY\r\rIND4\rYY\r\rIND5\rYY\r\rIND6\rYY\r\r\r\rWhen the proportion of genotype data between two individuals is larger than this threshold, these two individuals will be regarded as the same individual.\n\r","date":1618531200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1618470690,"objectID":"2dc0f741f90676f30fc6ee7bab6de4ca","permalink":"/post/feature-3-overlap_pca/blupadc/","publishdate":"2021-04-16T00:00:00Z","relpermalink":"/post/feature-3-overlap_pca/blupadc/","section":"post","summary":"Breed composition analysis ","tags":[],"title":"R package:blupADC-Feature 3","type":"post"},{"authors":[],"categories":["pedigree"],"content":"\r\r🦄大家好,这一节主要给大家讲述的是如何使用blupADC中的函数来进行系谱数据处理。blupADC提供的trace_pedigree函数，可以帮助我们非常方便的对系谱数据进行多种处理:包括系谱重命名、系谱追溯及系谱纠错等。\n💖同样的，我们还是用一个小例子来简单的看下该函数的用法\nlibrary(blupADC)\r## 载入需要的程辑包：data.table\r## 载入需要的程辑包：Rcpp\r## 载入需要的程辑包：RcppArmadillo\rpedigree_result=trace_pedigree(\rinput_pedigree=origin_pedigree, #provided pedigree data object\routput_pedigree_tree=TRUE # output pedigree tree\r) ## Peidgree provided has three columns,please make sure the format of pedigree_data has three columns: Offspring Sire Dam ## Found duplicated id error: offsprings with same id but have different sire or dam records, records of sire and dam would be treated as missing value ## Found sex error: ids in the sire column also appear in the dam column, these ids would be treated as missing value ## Trace full generation......\r我们可以通过str查看函数的输出结果，如下所示:\nstr(pedigree_result)\r## List of 5\r## $ ped : chr [1:15945, 1:3] \u0026quot;DD19348310\u0026quot; \u0026quot;DD19386807\u0026quot; \u0026quot;DD19119705\u0026quot; \u0026quot;DD16007415\u0026quot; ...\r## ..- attr(*, \u0026quot;dimnames\u0026quot;)=List of 2\r## .. ..$ : NULL\r## .. ..$ : chr [1:3] \u0026quot;Offspring\u0026quot; \u0026quot;Sire\u0026quot; \u0026quot;Dam\u0026quot;\r## $ rename_ped :\u0026#39;data.frame\u0026#39;: 15945 obs. of 6 variables:\r## ..$ Offspring : chr [1:15945] \u0026quot;DD19348310\u0026quot; \u0026quot;DD19386807\u0026quot; \u0026quot;DD19119705\u0026quot; \u0026quot;DD16007415\u0026quot; ...\r## ..$ Generation : num [1:15945] 0 0 0 0 0 0 0 0 0 0 ...\r## ..$ Offspring_Id: int [1:15945] 1 2 3 4 5 6 7 8 9 10 ...\r## ..$ Sire_Id : num [1:15945] 0 0 0 0 0 0 0 0 0 0 ...\r## ..$ Dam_Id : num [1:15945] 0 0 0 0 0 0 0 0 0 0 ...\r## ..$ Order : int [1:15945] 1 2 3 4 5 6 7 8 9 10 ...\r## $ pedigree_tree: chr [1:15945, 1:15] \u0026quot;DD19348310\u0026quot; \u0026quot;DD19386807\u0026quot; \u0026quot;DD19119705\u0026quot; \u0026quot;DD16007415\u0026quot; ...\r## ..- attr(*, \u0026quot;dimnames\u0026quot;)=List of 2\r## .. ..$ : NULL\r## .. ..$ : chr [1:15] \u0026quot;Offspring\u0026quot; \u0026quot;Sire\u0026quot; \u0026quot;Dam\u0026quot; \u0026quot;SireSire\u0026quot; ...\r## $ error_id_set :List of 4\r## ..$ OOO0OOO0OOOOO0OOOOOO: chr [1:24] \u0026quot;DD19119705\u0026quot; \u0026quot;DD20488904\u0026quot; \u0026quot;DD20153801\u0026quot; \u0026quot;DD20376912\u0026quot; ...\r## ..$ O0O0O0O0OOO0O0O0OOOO: chr \u0026quot;DD13006182\u0026quot;\r## ..$ OOOOOOO0O0O0O0O0O0OO: NULL\r## ..$ O0O0O0OOOOOOOOO0OOO0: NULL\r## $ sibs :List of 2\r## ..$ group_full_sibs : NULL\r## ..$ family_size_full_sibs: NULL\r可以很明显的看到,输出结果包括以下几个部分:\n\rped: 经过处理后(纠错、追溯等)的原始系谱数据且未进行重命名\n\rrename_ped: 经过处理(纠错、追溯等)且重命名的系谱数据。第1列为原始系谱ID,第2列为个体在系谱中的代数，第3-5列为重命名后的系谱数据\n\rpedigree_tree:个体的系谱树矩阵。可以通过设置 pedigree_tree_depth指定系谱树包含的代数，默认不输出系谱树(节省时间)\n\rerror_id_set:系谱记录错误个体数据集。根据错误的种类可以分为以下4个子集\n\r\rerror_duplicated_id:相同的个体，父母却不相同\n\rerror_sex_id:个体同时出现在父亲列和母亲列\n\rerror_breed_id: 个体和父母的品种不相同(仅针对特殊格式)\n\rerror_birth_date_id: 个体的出生日期要早于父母的出生日期(需在系谱的第四列提供个体的出生日期)\n\r\r下面，我们将具体讲解trace_pedigree函数中各种参数的含义:\n💥主要参数\r\r参数1：input_pedigree\r\r用户提供的系谱数据，data.frame或 matrix类型。\n💌用户提供系谱数据需为以下几种格式中的一种，包括：\n\r3列系谱格式:\r\r\r\rOffspring\rSire\rDam\r\r\r\rDD19575312\rDD18768902\rDD16376015\r\rDD19513112\rDD18768902\rDD17111017\r\rDD20348012\rDD19132207\rDD19234510\r\rDD20361110\rDD19331001\rDD19293112\r\rDD20471212\rDD19331001\rDD19320808\r\rDD20564818\rDD19331001\rDD19311009\r\r\r\r\r4列系谱格式:\r\r\r\rOffspring\rSire\rDam\rBirth_Date\r\r\r\rDD19575312\rDD18768902\rDD16376015\r20200101\r\rDD19513112\rDD18768902\rDD17111017\r20200102\r\rDD20348012\rDD19132207\rDD19234510\r20200103\r\rDD20361110\rDD19331001\rDD19293112\r20200104\r\rDD20471212\rDD19331001\rDD19320808\r20200105\r\rDD20564818\rDD19331001\rDD19311009\r20200106\r\r\r\r\r多列系谱格式:\r\r\r\rOffspring\rSire\rDam\rSireSire\rDamSire\rSireSireSire\r\r\r\rDD20231905\rDD19581002\rDD18750810\rDD16785512\rDD15507717\rDD14008512\r\rDD20458701\rDD19564302\rDD18925809\rDD15349017\rDD15245411\rDD16771212\r\rDD20324707\rDD19232903\rDD18571012\rDD16794714\rDD16744412\rDD16714516\r\rDD19288609\rDD18713408\rDD18552609\rDD15180015\rDD15479214\rDD15243711\r\rDD16222012\rDD15145005\rDD15378812\rDD14110014\rDD15501518\rDD15206217\r\rDD17684713\rDD16672107\rDD15122311\rDD15505715\rDD15347415\rDD16383111\r\r\r\rNote:需要注意的是，当系谱为多列时，系谱的列名需要标注为特殊形式,e.g. SireSire:父亲的父亲, SirSireSire:父亲的父亲的父亲\n系谱数据中缺失值可以设置为: NA或0。\n同样的，为了便于用户操作，用户还可以直接提供本地系谱数据的路径和名称\n\r参数2：input_pedigree_path\r\r本地系谱数据的路径,character类型。\n\r参数3：input_pedigree_name\r\r本地系谱数据的名称，character类型。\n\r参数4：pedigree_format_conversion\r\r是否将提供的多列系谱转换到3列，logical类型。如果用户提供的系谱数据包含多列，那么用户必须设置pedigree_format_conversion=TRUE 。\n\r参数5：output_pedigree_type\r\r系谱输出的格式，character类型。可选格式包括: BLUPF90, DMU 及 Normal(未重命名)。\n\r参数6：output_pedigree_path\r\r系谱输出到本地的路径，character类型。\n\r参数7：output_pedigree_name\r\r系谱输出到本地的名称，character类型。\n\r💨其他参数\r\r参数8：dup_error_check\r\r检查相同个体的父母却不相同的错误，logical类型，默认为TRUE。\n\r参数9：sex_error_check\r\r检查个体同时出现在父亲列和母亲列的错误，logical类型，默认为TRUE。\n\r参数10：breed_error_check\r\r检查个体品种与父母品种不同的错误，logical类型，默认为FALSE。\n\r参数11：birth_date_error_check\r\r检查个体出生日期早于父母的错误，logical类型，默认为FALSE。\n\r参数12：trace_id\r\r追溯系谱记录的个体号，character类型，默认为NULL(追溯系谱中所有的个体)。\n\r参数13：trace_offspring\r\r是否追溯子代，logical类型，默认为FALSE。\n\r参数14：trace_generation\r\r追溯的代数，numeric类型，默认为5。\n\r参数15：trace_birth_date\r\r追溯出生日期晚于指定日期的个体，character类型。\n\r参数16：output_pedigree_tree\r\r是否输出系谱树，logical类型，默认为FALSE。\n\r参数17：pedigree_tree_depth\r\r系谱树的深度(系谱代数)，numeric类型，默认为3。\n\r","date":1618531200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1618536763,"objectID":"922fb907c81b523391b7337b247484d8","permalink":"/post/2021-04-17-r-package-blup-adc-pedigree/pedigree/","publishdate":"2021-04-16T00:00:00Z","relpermalink":"/post/2021-04-17-r-package-blup-adc-pedigree/pedigree/","section":"post","summary":"系谱数据追溯与重命名","tags":[],"title":"R package:blupADC-使用说明3","type":"post"},{"authors":[],"categories":["Imputaion","QC"],"content":"Table of Contents  Overview Example Parameter  💙Basic 💜Advanced      Overview 🤖 Generally, most genotype data need to perform quality control and imputation before applying in animal and plant breeding. For convenience, package blupADC provides genotype_data_QC_Imputation function to perform quality control and imputation by interfacing with software Plink and software Beagle in an easy way (we only need to provide the software path and software name).\n👉 Note: For convenience, blupADC has encapsulated software Plink(for quality control) version-1.9 and software Beagle(for imputation) version-5.2. If you want change this version, you should set the related parameters in the part of Advanced parameter.\nExample library(blupADC)\rgenotype_data_QC_Imputation(\rinput_data_hmp=data_hmp, #provided hapmap data object\rdata_analysis_method=\u0026quot;QC_Imputation\u0026quot;, #analysis method type,QC + imputatoin\routput_data_path=\u0026quot;/root/result\u0026quot;, #output data path\routput_data_name=\u0026quot;YY_data\u0026quot;, #output data name\routput_data_type=\u0026quot;Plink\u0026quot; #output data format )  In the process of quality control and imputation，we should provide genotype data，these parameters are the as in genotype_data_format_conversion function(see more details).\nParameter 💙Basic   1：data_analysis_method\nMethod of analyzing data, character class.\n \u0026quot;QC\u0026quot; : only perform quality control \u0026quot;Imputation\u0026quot; : only perform imputation    \u0026quot;QC_Imputation\u0026quot; : first perform quality control, and then perform imputation\n  2：qc_snp_rate\n  Threshold of SNPs call rate in quality control, numeric class. Default is 0.1\n 3：qc_ind_rate  Threshold of individuals call rate in quality control, numeric class. Default is 0.1\n 4：qc_maf  Threshold of minor allele frequency(MAF) in quality control, numeric class. Default is 0.05\n 5：qc_hwe  Threshold of hardy weinberg equilibrium(HWE) in quality control, numeric class. Default is 1e-7\n💜Advanced  6：plink_software_path  Path of software Plink , character class.\n 7：plink_software_name  Name of software Plink , character class.\n 8：beagle_software_path  Path of software Beagle , character class.\n 9：beagle_software_name  Name of software Beagle , character class.\n 10：beagle_ref_data_path  File path of reference data in imputation, character class.\n 11：beagle_ref_data_name  File name of reference data in imputation, character class.\n 12：beagle_ped_path  File path of pedigree data in imputation, character class.\n 13：beagle_ped_name  File name of pedigree data in imputation, character class.\n","date":1618444800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1618664845,"objectID":"aa720309f26ed3c010d1cc0dd0b4148f","permalink":"/post/feature-2-qc_imputation/qc_imputation/","publishdate":"2021-04-15T00:00:00Z","relpermalink":"/post/feature-2-qc_imputation/qc_imputation/","section":"post","summary":"Genomic data quality control and genotype imputation","tags":[],"title":"R package:blupADC-Feature 2","type":"post"},{"authors":[],"categories":["Data format"],"content":"\r\r\rOverview\rExample\rOutput\rParameter\r\r🤡Basic\r💨Advanced\r\r\r\rOverview\rgenotype_data_format_conversion is the basic function of package:blupADC. By applying genotype_data_format_conversion , we can convert multiple genotype data formats in an easy way, including Hapmap, Plink, BLUPF90, Numeric and VCF.\n👉 Note: For analyzing VCF format data, blupADC has encapsulated software Plink version-1.9 and VCFtools version-0.1.17. If you want change this version, you could set the related parameters in the part of Advanced parameter.\n\rExample\rlibrary(blupADC)\rsum_data=genotype_data_format_conversion(\rinput_data_hmp=data_hmp, #provided hapmap data object output_data_type=c(\u0026quot;Plink\u0026quot;,\u0026quot;BLUPF90\u0026quot;,\u0026quot;Numeric\u0026quot;),# output data format\rreturn_result = TRUE, # return result cpu_cores=1 # number of cpu )\r## Start numeric(0,1,2) format conversion...... ## Complete BLUPF90 format conversion ## Complete Plink Data Format Conversion\r\rOutput\rstr(sum_data) ## List of 5\r## $ hmp :\u0026#39;data.frame\u0026#39;: 6 obs. of 311 variables:\r## ..$ rs# : chr [1:6] \u0026quot;SNP1\u0026quot; \u0026quot;SNP2\u0026quot; \u0026quot;SNP3\u0026quot; \u0026quot;SNP4\u0026quot; ...\r## ..$ alleles : logi [1:6] NA NA NA NA NA NA\r## ..$ chrom : int [1:6] 1 1 1 1 1 1\r## ..$ pos : int [1:6] 224488 293696 333333 464830 722623 838596\r## ..$ strand : logi [1:6] NA NA NA NA NA NA\r## ..$ assembly : logi [1:6] NA NA NA NA NA NA\r## ..$ center : logi [1:6] NA NA NA NA NA NA\r## ..$ protLSID : logi [1:6] NA NA NA NA NA NA\r## ..$ assayLSID: logi [1:6] NA NA NA NA NA NA\r## ..$ panelLSID: logi [1:6] NA NA NA NA NA NA\r## ..$ QCcode : logi [1:6] NA NA NA NA NA NA\r## ..$ 3098 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3498 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3297 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 2452 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 4255 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 2946 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3926 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3426 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 4213 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 2895 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 4172 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3620 : chr [1:6] \u0026quot;AA\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 4797 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 4660 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 4010 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 4095 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3029 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3930 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 4404 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 2020 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 2455 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3747 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 1590 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 2707 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 2320 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3397 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3876 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3658 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 2310 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 1996 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3000 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 2485 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 4412 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3395 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 4449 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3302 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3895 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 4328 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3892 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3764 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3922 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 4459 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 4236 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3535 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 2957 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 2927 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3499 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 4537 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 4288 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 4048 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3371 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3901 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3344 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 4745 : chr [1:6] \u0026quot;AA\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3118 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3093 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3410 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 4024 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3053 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3571 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3740 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 4374 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 4550 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3060 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3460 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3791 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3116 : chr [1:6] \u0026quot;AA\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3078 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 1974 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 1990 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3433 : chr [1:6] \u0026quot;AA\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 4349 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3340 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 2681 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 2628 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 4813 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 2221 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 2384 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 2721 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3463 : chr [1:6] \u0026quot;AA\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 2748 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 2973 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 1999 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3474 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 3689 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;TT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 1924 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 1948 : chr [1:6] \u0026quot;AC\u0026quot; \u0026quot;GG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## ..$ 110 : chr [1:6] \u0026quot;CC\u0026quot; \u0026quot;TG\u0026quot; \u0026quot;GT\u0026quot; \u0026quot;CC\u0026quot; ...\r## .. [list output truncated]\r## $ ped : chr [1:300, 1:18] \u0026quot;3098\u0026quot; \u0026quot;3498\u0026quot; \u0026quot;3297\u0026quot; \u0026quot;2452\u0026quot; ...\r## $ map :\u0026#39;data.frame\u0026#39;: 6 obs. of 4 variables:\r## ..$ chrom : int [1:6] 1 1 1 1 1 1\r## ..$ rs# : chr [1:6] \u0026quot;SNP1\u0026quot; \u0026quot;SNP2\u0026quot; \u0026quot;SNP3\u0026quot; \u0026quot;SNP4\u0026quot; ...\r## ..$ strand: num [1:6] 0.224 0.294 0.333 0.465 0.723 ...\r## ..$ pos : int [1:6] 224488 293696 333333 464830 722623 838596\r## $ blupf90: chr [1:300, 1:2] \u0026quot;3098 \u0026quot; \u0026quot;3498 \u0026quot; \u0026quot;3297 \u0026quot; \u0026quot;2452 \u0026quot; ...\r## ..- attr(*, \u0026quot;dimnames\u0026quot;)=List of 2\r## .. ..$ : NULL\r## .. ..$ : chr [1:2] \u0026quot;IND_name\u0026quot; \u0026quot;\u0026quot;\r## $ numeric: num [1:300, 1:6] 2 1 1 2 1 2 1 1 2 2 ...\r## ..- attr(*, \u0026quot;dimnames\u0026quot;)=List of 2\r## .. ..$ : chr [1:300] \u0026quot;3098\u0026quot; \u0026quot;3498\u0026quot; \u0026quot;3297\u0026quot; \u0026quot;2452\u0026quot; ...\r## .. ..$ : chr [1:6] \u0026quot;SNP1\u0026quot; \u0026quot;SNP2\u0026quot; \u0026quot;SNP3\u0026quot; \u0026quot;SNP4\u0026quot; ...\rAccording to the result of output, we find that the output contains 5 parts, including:\n\rhmp  : Hapmap format genotype data\r\rThe first column stands for the name of SNP, the thrid column stands for chromosome, the fourth column stands for the physical postion, and the twelth column and the after columns stand for the genotype data\n\r\r\rrs#\ralleles\rchrom\rpos\rstrand\rassembly\rcenter\rprotLSID\rassayLSID\rpanelLSID\rQCcode\r3098\r3498\r3297\r2452\r\r\r\rSNP1\rNA\r1\r224488\rNA\rNA\rNA\rNA\rNA\rNA\rNA\rCC\rAC\rAC\rCC\r\rSNP2\rNA\r1\r293696\rNA\rNA\rNA\rNA\rNA\rNA\rNA\rGG\rTG\rTG\rGG\r\rSNP3\rNA\r1\r333333\rNA\rNA\rNA\rNA\rNA\rNA\rNA\rGG\rTT\rTT\rGG\r\rSNP4\rNA\r1\r464830\rNA\rNA\rNA\rNA\rNA\rNA\rNA\rCC\rCC\rCC\rCC\r\rSNP5\rNA\r1\r722623\rNA\rNA\rNA\rNA\rNA\rNA\rNA\rAA\rGG\rGG\rAA\r\rSNP6\rNA\r1\r838596\rNA\rNA\rNA\rNA\rNA\rNA\rNA\rCC\rTC\rTT\rCC\r\r\r\r\rped : Plink 格式的ped数据\r\rThe first column stands for family name,the second column stands for the individual name,the seventh column and the after columns stand for the genotype data\n\r\r3098\r3098\r0\r0\r0\r0\rC\rC\rG\rG\r\r3498\r3498\r0\r0\r0\r0\rA\rC\rT\rG\r\r3297\r3297\r0\r0\r0\r0\rA\rC\rT\rG\r\r2452\r2452\r0\r0\r0\r0\rC\rC\rG\rG\r\r4255\r4255\r0\r0\r0\r0\rA\rC\rG\rG\r\r2946\r2946\r0\r0\r0\r0\rC\rC\rT\rG\r\r\r\r\rmap : Plink格式的map数据\r\rThe first column stands for chromosome, the second column stands for the name of SNP, the thrid column stands for the genetic positon(CM), and the fourth column stands for the physical position\n\r\r1\rSNP1\r0.224488\r224488\r\r1\rSNP2\r0.293696\r293696\r\r1\rSNP3\r0.333333\r333333\r\r1\rSNP4\r0.464830\r464830\r\r1\rSNP5\r0.722623\r722623\r\r1\rSNP6\r0.838596\r838596\r\r\r\r\rblupf90 : BLUPF90格式的基因型数据\r\rThe first column stands for individual name, the second column stands for the genotype data(numeric)\n\r\r3098\r200000\r\r3498\r112021\r\r3297\r112022\r\r2452\r200000\r\r4255\r102011\r\r2946\r212000\r\r\r\r\rnumeric : Numeric 格式的基因型数据\r\rrownames stands for the individual name, colnames stands for the name of SNP, 0,1,2 stand for the numeric genotype\n\r\r\rSNP1\rSNP2\rSNP3\rSNP4\rSNP5\rSNP6\r\r\r\r3098\r2\r0\r0\r0\r0\r0\r\r3498\r1\r1\r2\r0\r2\r1\r\r3297\r1\r1\r2\r0\r2\r2\r\r2452\r2\r0\r0\r0\r0\r0\r\r4255\r1\r0\r2\r0\r1\r1\r\r2946\r2\r1\r2\r0\r0\r0\r\r\r\r\rParameter\r🤡Basic\r\r1: input_data_plink_ped\r\rUser-provided Plink-ped format genotype data ，data.frame class.\n\r2:input_data_plink_map\r\rUser-provided Plink-map format genotype data ，data.frame class.\n\r3:input_data_hmp\r\rUser-provided Hapmap format genotype data ，data.frame class.\n\r4:input_data_BLUPF90\r\rUser-provided BLUPF90 format genotype data ，data.frame class.\n\r5:input_data_numeric\r\rUser-provided Numeric format genotype data ，matrix(numeric) class.\nNote: input_data_numeric should contain both rownames and colnames.\nIn addition, for convenience, users can provide the file name, file path, and file type of genotype data directly without reading them in R environment.\n\r6:input_data_type\nFile type of provided genotype data ，character class.\n\rHapmap\rPlink\rBLUPF90\rNumeric\rVCF\r\r7:input_data_path\n\r\rFile path of provided genotype data ，character class.\n\r8:input_data_name\r\rFile name of provided genotype data ，character class.\nNote: if input_data_type is Plink or VCF, user don’t need to include suffix in the file name of genotype data.\neg. for Plink type data, files name are test1.map and test1.ped，we should setinput_data_name=\"test1\".\n\r9:return_result\r\rWhether return result, logical class. Default is FALSE.\nAdditionally, for convenience, users can save output genotype data into local computer .\n\r10:output_data_path\r\rFile path of output genotype data, character class.\n\r11:output_data_name\r\rFile name of output genotype data, character class.\n\r12:output_data_type\nFile type of output genotype data, character class.\n\rHapmap\rPlink\rBLUPF90\rNumeric\rVCF\r\r\rNote: users can output multiple formats of genotype data simultaneously. e.g.output_data_type=c(\"Hapmap\",\"Plink\",\"BLUPF90\",\"Numeric\"), outout 4 types of genotype data simultaneously .\n\r💨Advanced\r\r13:cpu_cores\r\rNumber of cpu in calculating, numeric class. Default is 1.\n\r14:miss_base\r\rMissing genotype character, character class. Default is “NN”.\n\r15:miss_base_num\r\rMissing genotype number after numeric conversion, numeric class. Default is 5.\n\r16:plink_software_path\r\rPath of plink software in user computer. character class.\n\r17:plink_software_name\r\rName of plink software in user computer. character class.\n\r18:vcftools_software_path\r\rPath of vcftools software in user computer. character class.\n\r19:vcftools_software_name\r\rName of vcftools software in user computer. character class.\n\r\r","date":1618358400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1618383581,"objectID":"b107928fdee05958ff3b5aa1f0ccc19d","permalink":"/post/blupadc/","publishdate":"2021-04-14T00:00:00Z","relpermalink":"/post/blupadc/","section":"post","summary":"Convert genotype data format","tags":[],"title":"R package:blupADC-Feature 1","type":"post"},{"authors":[],"categories":["blupADC"],"content":"Table of Contents    OVERVIEW   GETTING STARTED  🙊Installation 🙊Features   Usage        Documents support two-language(English and Chinese).\nOVERVIEW blupADC is an useful and powerful tool for handling genomic data and pedigree data in animal and plant breeding(traditional blup and genomic selection). In the design of this package, most of data analysis problems in breeding have been considered, and the speed of calculation is also the key point. In terms of the speed, the core functions of this package are coded by c++ (Rcpp and RcppArmadillo ) , and it also supports parallel calculation by applying openMP programming.\nblupADC provides many useful functions for the whole steps for animal and plant breeding, including pedigree analysis(trace pedigree, rename pedigree, and correct pedigree errors), genotype data format conversion(supports Hapmap, Plink, Blupf90, Numeric, and VCF format), genotype data quality control and imputation, construction of kinship matrix(pedigree, genomic and single-step),and genetic evaluation( by interfacing with two famous breeding softwares, DMU and BLUPF90 in an easy way).\nFinally, we kindly provides an easier way of applying blupADC, which is a free website(see more details). Most functions of packageblupADC can be found in this website. Thus, for user who has little code experience, we recommend to use this website(only need to click and type, that\u0026rsquo;s enough). But the pitfall of this website is that it can\u0026rsquo;t handle big data.\n😊 Good Luck Charlie !\nGETTING STARTED 🙊Installation blupADC links to R packages Rcpp, RcppArmadillo and data.table. These dependencies should be installed before installing blupADC.\ninstall.packages(c(\u0026quot;Rcpp\u0026quot;, \u0026quot;RcppArmadillo\u0026quot;,\u0026quot;data.table\u0026quot;))\r 👉 Note: In the analysis of DMU and BLUPF90 , we need to download software DMU (DMU download website) and BLUPF90 previously (BLUPF90 download website). For convenience, we have encapsulated the basic module of DMU and BLUPF90 in package blupADC.\nFor commercial use of DMU and BLUPF90, user must contact the author of DMU and BLUPF90 !!!\nInstall blupADC on Linux packageurl \u0026lt;- \u0026quot;https://github.com/TXiang-lab/blupADC/raw/main/blupADC_1.0.1_linux.tar.gz\u0026quot;\rinstall.packages(packageurl,repos=NULL,method=\u0026quot;libcurl\u0026quot;)\r For Chinese users, we recommend to use the following code(installation would be faster):\npackageurl \u0026lt;- \u0026quot;https://gitee.com/qsmei/blup-adc/attach_files/751023/download/blupADC_1.0.1_linux.tar.gz\u0026quot;\rinstall.packages(packageurl,repos=NULL,method=\u0026quot;libcurl\u0026quot;)\r Install blupADC on Windows packageurl \u0026lt;- \u0026quot;https://github.com/TXiang-lab/blupADC/raw/master/blupADC_1.0.1.zip\u0026quot;\rinstall.packages(packageurl,repos=NULL)\r For Chinese users, we recommend to use the following code(installation would be faster):\npackageurl \u0026lt;- \u0026quot;https://gitee.com/qsmei/blup-adc/attach_files/751003/download/blupADC_1.0.1.zip\u0026quot;\rinstall.packages(packageurl,repos=NULL)\r After installed successfully, the blupADC package can be loaded by typing\nlibrary(blupADC)\r 🙊Features  Feature 1. Genomic data format conversion Feature 2. Genomic data quality control and genotype imputation Feature 3. Breed composition analysis and duplication detection of genomic data Feature 4. Pedigree tracing, analysis and visualization Feature 5. Relationship matrix construction(A,G, and H) Feature 6. Genetic evaluation with DMU Feature 7. Genetic evaluation with BLUPF90  Usage For convenience, all documents support two-language(English and Chinese).\nblupADC provides several datasets objects, including data_hmp, origin_pedigree.\nIn addition, blupADC provides several files which are saved in ~/blupADC/extdata. We can get the path of these files by typing\nsystem.file(\u0026quot;extdata\u0026quot;, package = \u0026quot;blupADC\u0026quot;) # path of provided files\r Feature 1. Genomic data format conversion (see more details) library(blupADC)\rsum_data=genotype_data_format_conversion(\rinput_data_hmp=data_hmp, #provided hapmap data object output_data_type=c(\u0026quot;Plink\u0026quot;,\u0026quot;BLUPF90\u0026quot;,\u0026quot;Numeric\u0026quot;),# output data format\rreturn_result = TRUE, # return result cpu_cores=1 # number of cpu )\r Feature 2. Genomic data quality control and genotype imputation (see more details) library(blupADC)\rgenotype_data_QC_Imputation(\rinput_data_hmp=data_hmp, #provided hapmap data object\rdata_analysis_method=\u0026quot;QC_Imputation\u0026quot;, #analysis method type,QC + imputatoin\routput_data_path=\u0026quot;/root/result\u0026quot;, #output data path\routput_data_name=\u0026quot;YY_data\u0026quot;, #output data name\routput_data_type=\u0026quot;Plink\u0026quot; #output data format )  Feature 3. Breed composition analysis and duplication detection of genomic data (see more details) library(blupADC)\rcheck_result=genotype_data_check(\rinput_data_hmp=PCA_data_hmp, #provided hapmap data object\rduplication_check=FALSE, #whether check the duplication of genotype\rbreed_check=TRUE, # whether check the record of breed\rbreed_record=PCA_Breed, # provided breed record\routput_data_path=\u0026quot;/root\u0026quot;, #output path\rreturn_result=TRUE #return result )\r Feature 4. Pedigree tracing, analysis and visualization (see more details) library(blupADC)\r#Trace pedigree\rpedigree_result=trace_pedigree(\rinput_pedigree=origin_pedigree, #provided pedigree data object\rtrace_generation=3, # trace generation\routput_pedigree_tree=TRUE # output pedigree tree\r) #Visualize pedigree\rlibrary(blupADC)\rplot=ggped(\rinput_pedigree=plot_pedigree,\rtrace_id=c(\u0026quot;121\u0026quot;),\rtrace_sibs=TRUE #whether plot the sibs of subset-id )  Feature 5. Relationship matrix construction(A,G, and H) (see more details) library(blupADC)\rkinship_result=cal_kinship(\rinput_data_hmp=data_hmp, #provided hapmap data object\rkinship_type=c(\u0026quot;G_A\u0026quot;,\u0026quot;G_D\u0026quot;), #type of kinship matrix\rdominance_type=c(\u0026quot;genotypic\u0026quot;), #type of dominance effect\rinbred_type=c(\u0026quot;Homozygous\u0026quot;), #type of inbreeding coefficients\rreturn_result=TRUE) #return result  Feature 6. Genetic evaluation with DMU (see more details) library(blupADC)\rdata_path=system.file(\u0026quot;extdata\u0026quot;, package = \u0026quot;blupADC\u0026quot;) # path of provided files run_DMU(\rphe_col_names=c(\u0026quot;Id\u0026quot;,\u0026quot;Mean\u0026quot;,\u0026quot;Sex\u0026quot;,\u0026quot;Herd_Year_Season\u0026quot;,\u0026quot;Litter\u0026quot;,\u0026quot;Trait1\u0026quot;,\u0026quot;Trait2\u0026quot;,\u0026quot;Age\u0026quot;), # colnames of phenotype target_trait_name=c(\u0026quot;Trait1\u0026quot;), #trait name fixed_effect_name=list(c(\u0026quot;Sex\u0026quot;,\u0026quot;Herd_Year_Season\u0026quot;)), #fixed effect name\rrandom_effect_name=list(c(\u0026quot;Id\u0026quot;,\u0026quot;Litter\u0026quot;)), #random effect name\rcovariate_effect_name=NULL, #covariate effect name\rphe_path=data_path, #path of phenotype file\rphe_name=\u0026quot;phenotype.txt\u0026quot;, #name of phenotype file\rinteger_n=5, #number of integer variable analysis_model=\u0026quot;PBLUP_A\u0026quot;, #model of genetic evaluation\rdmu_module=\u0026quot;dmuai\u0026quot;, #modeule of estimating variance components relationship_path=data_path, #path of relationship file relationship_name=\u0026quot;pedigree.txt\u0026quot;, #name of relationship file output_result_path=\u0026quot;/root\u0026quot; # output path )\r Feature 7. Genetic evaluation with BLUPF90 (see more details) library(blupADC)\rdata_path=system.file(\u0026quot;extdata\u0026quot;, package = \u0026quot;blupADC\u0026quot;) # path of provided files run_BLUPF90(\rphe_col_names=c(\u0026quot;Id\u0026quot;,\u0026quot;Mean\u0026quot;,\u0026quot;Sex\u0026quot;,\u0026quot;Herd_Year_Season\u0026quot;,\u0026quot;Litter\u0026quot;,\u0026quot;Trait1\u0026quot;,\u0026quot;Trait2\u0026quot;,\u0026quot;Age\u0026quot;), # colnames of phenotype target_trait_name=c(\u0026quot;Trait1\u0026quot;), #trait name fixed_effect_name=list(c(\u0026quot;Sex\u0026quot;,\u0026quot;Herd_Year_Season\u0026quot;)), #fixed effect name\rrandom_effect_name=list(c(\u0026quot;Id\u0026quot;,\u0026quot;Litter\u0026quot;)), #random effect name\rcovariate_effect_name=NULL, #covariate effect name\rphe_path=data_path, #path of phenotype file\rphe_name=\u0026quot;phenotype.txt\u0026quot;, #name of phenotype file\ranalysis_model=\u0026quot;PBLUP_A\u0026quot;, #model of genetic evaluation\rrelationship_path=data_path, #path of relationship file relationship_name=\u0026quot;pedigree.txt\u0026quot;, #name of relationship file output_result_path=\u0026quot;/root\u0026quot; # output path )  ","date":1618272000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1618324356,"objectID":"797828734720c63d3bac747eef5c9b10","permalink":"/post/feature-0-overview/overview/","publishdate":"2021-04-13T00:00:00Z","relpermalink":"/post/feature-0-overview/overview/","section":"post","summary":"Overview of package:blupADC ","tags":[],"title":"R package:blupADC- Overview","type":"post"},{"authors":["Mei Quanshun"],"categories":null,"content":" Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including code, math, and images.\n","date":1554595200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1554595200,"objectID":"557dc08fd4b672a0c08e0a8cf0c9ff7d","permalink":"/publication/preprint/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/preprint/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example preprint / working paper","type":"publication"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\n Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)   Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three \n A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/media/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}   Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }   Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":null,"categories":null,"content":"","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"d1311ddf745551c9e117aa4bb7e28516","permalink":"/project/external-project/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/external-project/","section":"project","summary":"An example of linking directly to an external project website using `external_link`.","tags":["Demo"],"title":"External Project","type":"project"},{"authors":null,"categories":null,"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"8f66d660a9a2edc2d08e68cc30f701f7","permalink":"/project/internal-project/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/internal-project/","section":"project","summary":"An example of using the in-built project page.","tags":["Deep Learning"],"title":"Internal Project","type":"project"},{"authors":["Mei Quanshun","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including code, math, and images.\n","date":1441065600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1441065600,"objectID":"966884cc0d8ac9e31fab966c4534e973","permalink":"/publication/journal-article/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/journal-article/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example journal article","type":"publication"},{"authors":["Mei Quanshun","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including code, math, and images.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372636800,"objectID":"69425fb10d4db090cfbd46854715582c","permalink":"/publication/conference-paper/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/conference-paper/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example conference paper","type":"publication"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"f26b5133c34eec1aa0a09390a36c2ade","permalink":"/admin/config.yml","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/admin/config.yml","section":"","summary":"","tags":null,"title":"","type":"wowchemycms"}]